

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 20 15:22:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4620 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  001A8C                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _lat_registers
    93  001A8C  89                 	db	137
    94  001A8D  0F                 	db	15
    95  001A8E  8A                 	db	138
    96  001A8F  0F                 	db	15
    97  001A90  8B                 	db	139
    98  001A91  0F                 	db	15
    99  001A92  8C                 	db	140
   100  001A93  0F                 	db	15
   101  001A94  8D                 	db	141
   102  001A95  0F                 	db	15
   103                           
   104                           ;initializer for _tris_registers
   105  001A96  92                 	db	146
   106  001A97  0F                 	db	15
   107  001A98  93                 	db	147
   108  001A99  0F                 	db	15
   109  001A9A  94                 	db	148
   110  001A9B  0F                 	db	15
   111  001A9C  95                 	db	149
   112  001A9D  0F                 	db	15
   113  001A9E  96                 	db	150
   114  001A9F  0F                 	db	15
   115                           
   116                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3061
   117  001AA0  68                 	db	104
   118                           
   119                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3059
   120  001AA1  5A                 	db	90
   121                           
   122                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3057
   123  001AA2  62                 	db	98
   124                           
   125                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3055
   126  001AA3  2A                 	db	42
   127                           
   128                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3050
   129  001AA4  1A                 	db	26
   130                           
   131                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3048
   132  001AA5  62                 	db	98
   133                           
   134                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3046
   135  001AA6  2A                 	db	42
   136                           
   137                           ;initializer for _RB7_Flag
   138  001AA7  01                 	db	1
   139                           
   140                           ;initializer for _RB6_Flag
   141  001AA8  01                 	db	1
   142                           
   143                           ;initializer for _RB5_Flag
   144  001AA9  01                 	db	1
   145                           
   146                           ;initializer for _RB4_Flag
   147  001AAA  01                 	db	1
   148                           
   149                           	psect	idataBANK0
   150  001B38                     __pidataBANK0:
   151                           	callstack 0
   152                           
   153                           ;initializer for _port_registers
   154  001B38  80                 	db	128
   155  001B39  0F                 	db	15
   156  001B3A  81                 	db	129
   157  001B3B  0F                 	db	15
   158  001B3C  82                 	db	130
   159  001B3D  0F                 	db	15
   160  001B3E  83                 	db	131
   161  001B3F  0F                 	db	15
   162  001B40  84                 	db	132
   163  001B41  0F                 	db	15
   164                           
   165                           	psect	smallconst
   166  001000                     __psmallconst:
   167                           	callstack 0
   168  001000  00                 	db	0
   169  001001  37                 	db	55
   170  001002  38                 	db	56
   171  001003  39                 	db	57
   172  001004  2F                 	db	47
   173  001005  34                 	db	52
   174  001006  35                 	db	53
   175  001007  36                 	db	54
   176  001008  2A                 	db	42
   177  001009  31                 	db	49
   178  00100A  32                 	db	50
   179  00100B  33                 	db	51
   180  00100C  2D                 	db	45
   181  00100D  23                 	db	35
   182  00100E  30                 	db	48
   183  00100F  3D                 	db	61
   184  001010  2B                 	db	43
   185  001011                     __end_of_btn_values:
   186                           	callstack 0
   187  0000                     _SPBRGH	set	4016
   188  0000                     _SPBRG	set	4015
   189  0000                     _BAUDCONbits	set	4024
   190  0000                     _TXREG	set	4013
   191  0000                     _TXSTAbits	set	4012
   192  0000                     _RCREG	set	4014
   193  0000                     _RCSTAbits	set	4011
   194  0000                     _TMR3L	set	4018
   195  0000                     _TMR3H	set	4019
   196  0000                     _TMR2	set	4044
   197  0000                     _T2CONbits	set	4042
   198  0000                     _TMR1L	set	4046
   199  0000                     _TMR1H	set	4047
   200  0000                     _T1CONbits	set	4045
   201  0000                     _TMR0L	set	4054
   202  0000                     _TMR0H	set	4055
   203  0000                     _T0CONbits	set	4053
   204  0000                     _PORTBbits	set	3969
   205  0000                     _INTCON2bits	set	4081
   206  0000                     _INTCON3bits	set	4080
   207  0000                     _TRISCbits	set	3988
   208  0000                     _SSPBUF	set	4041
   209  0000                     _SSPSTATbits	set	4039
   210  0000                     _SSPADD	set	4040
   211  0000                     _SSPCON2bits	set	4037
   212  0000                     _SSPCON1bits	set	4038
   213  0000                     _EECON2	set	4007
   214  0000                     _EECON1bits	set	4006
   215  0000                     _EEDATA	set	4008
   216  0000                     _EEADR	set	4009
   217  0000                     _EEADRH	set	4010
   218  0000                     _T3CONbits	set	4017
   219  0000                     _PIR2bits	set	4001
   220  0000                     _CCPR2L	set	4027
   221  0000                     _CCPR1L	set	4030
   222  0000                     _PIE2bits	set	4000
   223  0000                     _CCP2CONbits	set	4026
   224  0000                     _CCP1CONbits	set	4029
   225  0000                     _ADCON1bits	set	4033
   226  0000                     _ADRESL	set	4035
   227  0000                     _ADRESH	set	4036
   228  0000                     _PIR1bits	set	3998
   229  0000                     _PIE1bits	set	3997
   230  0000                     _INTCONbits	set	4082
   231  0000                     _ADCON2bits	set	4032
   232  0000                     _ADCON0bits	set	4034
   233  0000                     _PORTE	set	3972
   234  0000                     _PORTD	set	3971
   235  0000                     _PORTC	set	3970
   236  0000                     _PORTB	set	3969
   237  0000                     _PORTA	set	3968
   238  0000                     _LATE	set	3981
   239  0000                     _LATD	set	3980
   240  0000                     _LATC	set	3979
   241  0000                     _LATB	set	3978
   242  0000                     _LATA	set	3977
   243  0000                     _TRISD	set	3989
   244  0000                     _TRISC	set	3988
   245  0000                     _PR2	set	4043
   246  0000                     _TRISB	set	3987
   247  0000                     _TRISE	set	3990
   248  0000                     _TRISA	set	3986
   249  001011                     STR_1:
   250  001011  25                 	db	37
   251  001012  69                 	db	105	;'i'
   252  001013  00                 	db	0
   253  001014  00                 	db	0	; dummy byte at the end
   254  0000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258  001926                     __pcinit:
   259                           	callstack 0
   260  001926                     start_initialization:
   261                           	callstack 0
   262  001926                     __initialization:
   263                           	callstack 0
   264                           
   265                           ; Initialize objects allocated to BANK0 (10 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  001926  0E38               	movlw	low __pidataBANK0
   268  001928  6EF6               	movwf	tblptrl,c
   269  00192A  0E1B               	movlw	high __pidataBANK0
   270  00192C  6EF7               	movwf	tblptrh,c
   271  00192E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  001930  6EF8               	movwf	tblptru,c
   273  001932  EE00  F080         	lfsr	0,__pdataBANK0
   274  001936  EE10 F00A          	lfsr	1,10
   275  00193A                     copy_data0:
   276  00193A  0009               	tblrd		*+
   277  00193C  CFF5 FFEE          	movff	tablat,postinc0
   278  001940  50E5               	movf	postdec1,w,c
   279  001942  50E1               	movf	fsr1l,w,c
   280  001944  E1FA               	bnz	copy_data0
   281                           
   282                           ; Initialize objects allocated to COMRAM (31 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  001946  0E8C               	movlw	low __pidataCOMRAM
   285  001948  6EF6               	movwf	tblptrl,c
   286  00194A  0E1A               	movlw	high __pidataCOMRAM
   287  00194C  6EF7               	movwf	tblptrh,c
   288  00194E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  001950  6EF8               	movwf	tblptru,c
   290  001952  EE00  F045         	lfsr	0,__pdataCOMRAM
   291  001956  EE10 F01F          	lfsr	1,31
   292  00195A                     copy_data1:
   293  00195A  0009               	tblrd		*+
   294  00195C  CFF5 FFEE          	movff	tablat,postinc0
   295  001960  50E5               	movf	postdec1,w,c
   296  001962  50E1               	movf	fsr1l,w,c
   297  001964  E1FA               	bnz	copy_data1
   298                           
   299                           ; Clear objects allocated to BANK0 (6 bytes)
   300  001966  0100               	movlb	0
   301  001968  6B8F               	clrf	(__pbssBANK0+5)& (0+255),b
   302  00196A  6B8E               	clrf	(__pbssBANK0+4)& (0+255),b
   303  00196C  6B8D               	clrf	(__pbssBANK0+3)& (0+255),b
   304  00196E  6B8C               	clrf	(__pbssBANK0+2)& (0+255),b
   305  001970  6B8B               	clrf	(__pbssBANK0+1)& (0+255),b
   306  001972  6B8A               	clrf	__pbssBANK0& (0+255),b
   307                           
   308                           ; Clear objects allocated to COMRAM (68 bytes)
   309  001974  EE00  F001         	lfsr	0,__pbssCOMRAM
   310  001978  0E44               	movlw	68
   311  00197A                     clear_0:
   312  00197A  6AEE               	clrf	postinc0,c
   313  00197C  06E8               	decf	wreg,f,c
   314  00197E  E1FD               	bnz	clear_0
   315  001980                     end_of_initialization:
   316                           	callstack 0
   317  001980                     __end_of__initialization:
   318                           	callstack 0
   319  001980  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320  001982  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  001984  0100               	movlb	0
   322  001986  EFF1  F00B         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325  000001                     __pbssCOMRAM:
   326                           	callstack 0
   327  000001                     _EUSART_OverrunErrorHandler:
   328                           	callstack 0
   329  000001                     	ds	2
   330  000003                     _EUSART_FramingErrorHandler:
   331                           	callstack 0
   332  000003                     	ds	2
   333  000005                     _EUSART_RxInterruptHandler:
   334                           	callstack 0
   335  000005                     	ds	2
   336  000007                     _EUSART_TxInterruptHandler:
   337                           	callstack 0
   338  000007                     	ds	2
   339  000009                     _timer3_preload:
   340                           	callstack 0
   341  000009                     	ds	2
   342  00000B                     _TMR3_InterruptHandler:
   343                           	callstack 0
   344  00000B                     	ds	2
   345  00000D                     _TMR2_InterruptHandler:
   346                           	callstack 0
   347  00000D                     	ds	2
   348  00000F                     _timer1_preload:
   349                           	callstack 0
   350  00000F                     	ds	2
   351  000011                     _TMR1_InterruptHandler:
   352                           	callstack 0
   353  000011                     	ds	2
   354  000013                     _timer0_preload:
   355                           	callstack 0
   356  000013                     	ds	2
   357  000015                     _TMR0_InterruptHandler:
   358                           	callstack 0
   359  000015                     	ds	2
   360  000017                     _RB7_InterruptHandler_LOW:
   361                           	callstack 0
   362  000017                     	ds	2
   363  000019                     _RB7_InterruptHandler_HIGH:
   364                           	callstack 0
   365  000019                     	ds	2
   366  00001B                     _RB6_InterruptHandler_LOW:
   367                           	callstack 0
   368  00001B                     	ds	2
   369  00001D                     _RB6_InterruptHandler_HIGH:
   370                           	callstack 0
   371  00001D                     	ds	2
   372  00001F                     _RB5_InterruptHandler_LOW:
   373                           	callstack 0
   374  00001F                     	ds	2
   375  000021                     _RB5_InterruptHandler_HIGH:
   376                           	callstack 0
   377  000021                     	ds	2
   378  000023                     _RB4_InterruptHandler_LOW:
   379                           	callstack 0
   380  000023                     	ds	2
   381  000025                     _RB4_InterruptHandler_HIGH:
   382                           	callstack 0
   383  000025                     	ds	2
   384  000027                     _INT2_InterruptHandler:
   385                           	callstack 0
   386  000027                     	ds	2
   387  000029                     _INT1_InterruptHandler:
   388                           	callstack 0
   389  000029                     	ds	2
   390  00002B                     _INT0_InterruptHandler:
   391                           	callstack 0
   392  00002B                     	ds	2
   393  00002D                     _I2C_Report_Receive_Overflow_InterruptHandle:
   394                           	callstack 0
   395  00002D                     	ds	2
   396  00002F                     _I2C_DefaultInterruptHandle:
   397                           	callstack 0
   398  00002F                     	ds	2
   399  000031                     _I2C_Report_Write_Collision_InterruptHandler:
   400                           	callstack 0
   401  000031                     	ds	2
   402  000033                     _CCP2_InterruptHandler:
   403                           	callstack 0
   404  000033                     	ds	2
   405  000035                     _CCP1_InterruptHandler:
   406                           	callstack 0
   407  000035                     	ds	2
   408  000037                     _ADC_InterruptHandler:
   409                           	callstack 0
   410  000037                     	ds	2
   411  000039                     _timer2_preload:
   412                           	callstack 0
   413  000039                     	ds	1
   414  00003A                     relay_turn_off@F3008:
   415                           	callstack 0
   416  00003A                     	ds	1
   417  00003B                     relay_turn_on@F3003:
   418                           	callstack 0
   419  00003B                     	ds	1
   420  00003C                     relay_initialize@F2998:
   421                           	callstack 0
   422  00003C                     	ds	1
   423  00003D                     led_turn_toggle@F3019:
   424                           	callstack 0
   425  00003D                     	ds	1
   426  00003E                     led_turn_off@F3014:
   427                           	callstack 0
   428  00003E                     	ds	1
   429  00003F                     led_turn_on@F3009:
   430                           	callstack 0
   431  00003F                     	ds	1
   432  000040                     led_initialize@F3004:
   433                           	callstack 0
   434  000040                     	ds	1
   435  000041                     _SPI_Obj:
   436                           	callstack 0
   437  000041                     	ds	2
   438  000043                     _SPI_Msater_Side_Slave1_RetVal:
   439                           	callstack 0
   440  000043                     	ds	1
   441  000044                     _SPI_SS1:
   442                           	callstack 0
   443  000044                     	ds	1
   444                           
   445                           	psect	dataCOMRAM
   446  000045                     __pdataCOMRAM:
   447                           	callstack 0
   448  000045                     _lat_registers:
   449                           	callstack 0
   450  000045                     	ds	10
   451  00004F                     _tris_registers:
   452                           	callstack 0
   453  00004F                     	ds	10
   454  000059                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3061:
   455                           	callstack 0
   456  000059                     	ds	1
   457  00005A                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3059:
   458                           	callstack 0
   459  00005A                     	ds	1
   460  00005B                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3057:
   461                           	callstack 0
   462  00005B                     	ds	1
   463  00005C                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3055:
   464                           	callstack 0
   465  00005C                     	ds	1
   466  00005D                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3050:
   467                           	callstack 0
   468  00005D                     	ds	1
   469  00005E                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3048:
   470                           	callstack 0
   471  00005E                     	ds	1
   472  00005F                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3046:
   473                           	callstack 0
   474  00005F                     	ds	1
   475  000060                     _RB7_Flag:
   476                           	callstack 0
   477  000060                     	ds	1
   478  000061                     _RB6_Flag:
   479                           	callstack 0
   480  000061                     	ds	1
   481  000062                     _RB5_Flag:
   482                           	callstack 0
   483  000062                     	ds	1
   484  000063                     _RB4_Flag:
   485                           	callstack 0
   486  000063                     	ds	1
   487                           
   488                           	psect	bssBANK0
   489  00008A                     __pbssBANK0:
   490                           	callstack 0
   491  00008A                     	ds	6
   492                           
   493                           	psect	dataBANK0
   494  000080                     __pdataBANK0:
   495                           	callstack 0
   496  000080                     _port_registers:
   497                           	callstack 0
   498  000080                     	ds	10
   499                           
   500                           	psect	cstackCOMRAM
   501  000064                     __pcstackCOMRAM:
   502                           	callstack 0
   503  000064                     RB4_ISR@RB4_Source:
   504                           	callstack 0
   505  000064                     RB5_ISR@RB5_Source:
   506                           	callstack 0
   507  000064                     RB6_ISR@RB6_Source:
   508                           	callstack 0
   509  000064                     RB7_ISR@RB7_Source:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x0
   513  000064                     	ds	1
   514  000065                     gpio_pin_direction_intialize@_pin_config:
   515                           	callstack 0
   516  000065                     gpio_pin_write_logic@_pin_config:
   517                           	callstack 0
   518  000065                     SPI_Send_Byte@Config:
   519                           	callstack 0
   520  000065                     SPI_Read_Byte@Config:
   521                           	callstack 0
   522  000065                     MSSP_SPI_Interrupt_Init@Config:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1
   526  000065                     	ds	2
   527  000067                     ??_gpio_pin_direction_intialize:
   528  000067                     gpio_pin_write_logic@logic:
   529                           	callstack 0
   530  000067                     SPI_Send_Byte@_data:
   531                           	callstack 0
   532  000067                     SPI_Read_Byte@_data:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x3
   536  000067                     	ds	1
   537  000068                     ??_gpio_pin_write_logic:
   538  000068                     
   539                           ; 1 bytes @ 0x4
   540  000068                     	ds	1
   541  000069                     
   542                           ; 1 bytes @ 0x5
   543  000069                     	ds	4
   544  00006D                     gpio_pin_direction_intialize@ret:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00006D                     	ds	1
   549  00006E                     gpio_pin_write_logic@ret:
   550                           	callstack 0
   551  00006E                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@Config:
   552                           	callstack 0
   553  00006E                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  00006E                     	ds	1
   558  00006F                     gpio_pin_intialize@_pin_config:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xB
   562  00006F                     	ds	1
   563  000070                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0xC
   567  000070                     	ds	1
   568  000071                     ??_gpio_pin_intialize:
   569  000071                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI:
   570                           	callstack 0
   571  000071                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0xD
   575  000071                     	ds	1
   576  000072                     gpio_pin_intialize@ret:
   577                           	callstack 0
   578  000072                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK:
   579                           	callstack 0
   580  000072                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0xE
   584  000072                     	ds	1
   585  000073                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xF
   589  000073                     	ds	1
   590  000074                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x10
   594  000074                     	ds	1
   595  000075                     SPI_Init@Config:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x11
   599  000075                     	ds	2
   600  000077                     ??_SPI_Init:
   601                           
   602                           ; 1 bytes @ 0x13
   603  000077                     	ds	1
   604  000078                     ??_main:
   605                           
   606                           ; 1 bytes @ 0x14
   607  000078                     	ds	2
   608                           
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 15 in file "application.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  ret             1    0        unsigned char 
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2  1634[None  ] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels required when called: 5
   634 ;; This function calls:
   635 ;;		_SPI_Init
   636 ;;		_SPI_Read_Byte
   637 ;;		_SPI_Send_Byte
   638 ;;		_application_intialize
   639 ;;		_gpio_pin_intialize
   640 ;;		_gpio_pin_write_logic
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647  0017E2                     __ptext0:
   648                           	callstack 0
   649  0017E2                     _main:
   650                           	callstack 26
   651  0017E2                     
   652                           ;application.c: 18:     application_intialize();
   653  0017E2  ECA5  F00D         	call	_application_intialize	;wreg free
   654  0017E6                     
   655                           ;application.c: 20:     SPI_Obj.spi_mode = 0;
   656  0017E6  0E00               	movlw	0
   657  0017E8  6E41               	movwf	_SPI_Obj^0,c
   658  0017EA                     
   659                           ;application.c: 21:     SPI_Obj.spi_config.SampleSelect = 0;
   660  0017EA  0EF3               	movlw	-13
   661  0017EC  1642               	andwf	(_SPI_Obj+1)^0,f,c
   662  0017EE                     
   663                           ;application.c: 22:     SPI_Obj.spi_config.ClockPolarity = 0;
   664  0017EE  0EFC               	movlw	-4
   665  0017F0  1642               	andwf	(_SPI_Obj+1)^0,f,c
   666  0017F2                     
   667                           ;application.c: 23:     SPI_Obj.spi_config.ClockSelect = 0;
   668  0017F2  0ECF               	movlw	-49
   669  0017F4  1642               	andwf	(_SPI_Obj+1)^0,f,c
   670  0017F6  0E41               	movlw	low _SPI_Obj
   671  0017F8  6E75               	movwf	SPI_Init@Config^0,c
   672  0017FA  0E00               	movlw	high _SPI_Obj
   673  0017FC  6E76               	movwf	(SPI_Init@Config+1)^0,c
   674  0017FE  EC0E  F00A         	call	_SPI_Init	;wreg free
   675  001802                     
   676                           ;application.c: 26:     SPI_SS1.port = PORTD_INDEX;
   677  001802  5044               	movf	_SPI_SS1^0,w,c
   678  001804  0BF8               	andlw	-8
   679  001806  0903               	iorlw	3
   680  001808  6E44               	movwf	_SPI_SS1^0,c
   681  00180A                     
   682                           ;application.c: 27:     SPI_SS1.pin = GPIO_PIN0;
   683  00180A  0EC7               	movlw	-57
   684  00180C  1644               	andwf	_SPI_SS1^0,f,c
   685  00180E                     
   686                           ;application.c: 28:     SPI_SS1.direction = GPIO_DIRECTION_OUTPUT;
   687  00180E  9C44               	bcf	_SPI_SS1^0,6,c
   688  001810                     
   689                           ;application.c: 29:     SPI_SS1.logic = GPIO_HIGH;
   690  001810  8E44               	bsf	_SPI_SS1^0,7,c
   691  001812  0E44               	movlw	low _SPI_SS1
   692  001814  6E6F               	movwf	gpio_pin_intialize@_pin_config^0,c
   693  001816  0E00               	movlw	high _SPI_SS1
   694  001818  6E70               	movwf	(gpio_pin_intialize@_pin_config+1)^0,c
   695  00181A  EC5D  F00C         	call	_gpio_pin_intialize	;wreg free
   696  00181E                     l6152:
   697  00181E  0E44               	movlw	low _SPI_SS1
   698  001820  6E65               	movwf	gpio_pin_write_logic@_pin_config^0,c
   699  001822  0E00               	movlw	high _SPI_SS1
   700  001824  6E66               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   701  001826  0E00               	movlw	0
   702  001828  6E67               	movwf	gpio_pin_write_logic@logic^0,c
   703  00182A  EC5B  F00B         	call	_gpio_pin_write_logic	;wreg free
   704  00182E  0E41               	movlw	low _SPI_Obj
   705  001830  6E65               	movwf	SPI_Send_Byte@Config^0,c
   706  001832  0E00               	movlw	high _SPI_Obj
   707  001834  6E66               	movwf	(SPI_Send_Byte@Config+1)^0,c
   708  001836  0E61               	movlw	97
   709  001838  6E67               	movwf	SPI_Send_Byte@_data^0,c
   710  00183A  EC2F  F00D         	call	_SPI_Send_Byte	;wreg free
   711  00183E  0E41               	movlw	low _SPI_Obj
   712  001840  6E65               	movwf	SPI_Read_Byte@Config^0,c
   713  001842  0E00               	movlw	high _SPI_Obj
   714  001844  6E66               	movwf	(SPI_Read_Byte@Config+1)^0,c
   715  001846  0E43               	movlw	low _SPI_Msater_Side_Slave1_RetVal
   716  001848  6E67               	movwf	SPI_Read_Byte@_data^0,c
   717  00184A  0E00               	movlw	high _SPI_Msater_Side_Slave1_RetVal
   718  00184C  6E68               	movwf	(SPI_Read_Byte@_data+1)^0,c
   719  00184E  ECF3  F00C         	call	_SPI_Read_Byte	;wreg free
   720  001852                     
   721                           ;application.c: 36:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   722  001852  0E02               	movlw	2
   723  001854  6E79               	movwf	(??_main+1)^0,c
   724  001856  0E45               	movlw	69
   725  001858  6E78               	movwf	??_main^0,c
   726  00185A  0EAA               	movlw	170
   727  00185C                     u4457:
   728  00185C  2EE8               	decfsz	wreg,f,c
   729  00185E  D7FE               	bra	u4457
   730  001860  2E78               	decfsz	??_main^0,f,c
   731  001862  D7FC               	bra	u4457
   732  001864  2E79               	decfsz	(??_main+1)^0,f,c
   733  001866  D7FA               	bra	u4457
   734  001868  0E41               	movlw	low _SPI_Obj
   735  00186A  6E65               	movwf	SPI_Send_Byte@Config^0,c
   736  00186C  0E00               	movlw	high _SPI_Obj
   737  00186E  6E66               	movwf	(SPI_Send_Byte@Config+1)^0,c
   738  001870  0E62               	movlw	98
   739  001872  6E67               	movwf	SPI_Send_Byte@_data^0,c
   740  001874  EC2F  F00D         	call	_SPI_Send_Byte	;wreg free
   741  001878  0E41               	movlw	low _SPI_Obj
   742  00187A  6E65               	movwf	SPI_Read_Byte@Config^0,c
   743  00187C  0E00               	movlw	high _SPI_Obj
   744  00187E  6E66               	movwf	(SPI_Read_Byte@Config+1)^0,c
   745  001880  0E43               	movlw	low _SPI_Msater_Side_Slave1_RetVal
   746  001882  6E67               	movwf	SPI_Read_Byte@_data^0,c
   747  001884  0E00               	movlw	high _SPI_Msater_Side_Slave1_RetVal
   748  001886  6E68               	movwf	(SPI_Read_Byte@_data+1)^0,c
   749  001888  ECF3  F00C         	call	_SPI_Read_Byte	;wreg free
   750  00188C                     
   751                           ;application.c: 39:         _delay((unsigned long)((250)*(4000000UL/4000.0)));
   752  00188C  0E02               	movlw	2
   753  00188E  6E79               	movwf	(??_main+1)^0,c
   754  001890  0E45               	movlw	69
   755  001892  6E78               	movwf	??_main^0,c
   756  001894  0EAA               	movlw	170
   757  001896                     u4467:
   758  001896  2EE8               	decfsz	wreg,f,c
   759  001898  D7FE               	bra	u4467
   760  00189A  2E78               	decfsz	??_main^0,f,c
   761  00189C  D7FC               	bra	u4467
   762  00189E  2E79               	decfsz	(??_main+1)^0,f,c
   763  0018A0  D7FA               	bra	u4467
   764  0018A2  0E44               	movlw	low _SPI_SS1
   765  0018A4  6E65               	movwf	gpio_pin_write_logic@_pin_config^0,c
   766  0018A6  0E00               	movlw	high _SPI_SS1
   767  0018A8  6E66               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   768  0018AA  0E01               	movlw	1
   769  0018AC  6E67               	movwf	gpio_pin_write_logic@logic^0,c
   770  0018AE  EC5B  F00B         	call	_gpio_pin_write_logic	;wreg free
   771  0018B2  EF0F  F00C         	goto	l6152
   772  0018B6  EF07  F000         	goto	start
   773  0018BA                     __end_of_main:
   774                           	callstack 0
   775                           
   776 ;; *************** function _gpio_pin_intialize *****************
   777 ;; Defined at:
   778 ;;		line 144 in file "MCAL_Layer/GPIO/hal_gpio.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  _pin_config     2   11[COMRAM] PTR const struct .
   781 ;;		 -> SPI_SS1(1), relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  ret             1   14[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      unsigned char 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        4 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 3
   800 ;; This function calls:
   801 ;;		_gpio_pin_direction_intialize
   802 ;;		_gpio_pin_write_logic
   803 ;; This function is called by:
   804 ;;		_main
   805 ;;		_seven_segement_intialize
   806 ;;		_lcd_4bit_intialize
   807 ;;		_lcd_8bit_intialize
   808 ;;		_dc_motor_initialize
   809 ;;		_keypad_initialize
   810 ;;		_led_initialize
   811 ;;		_relay_initialize
   812 ;;		_Ultrasonic_Init
   813 ;;		_CCP_Init
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text1
   818  0018BA                     __ptext1:
   819                           	callstack 0
   820  0018BA                     _gpio_pin_intialize:
   821                           	callstack 27
   822  0018BA                     
   823                           ;MCAL_Layer/GPIO/hal_gpio.c: 146:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1){
   824  0018BA  506F               	movf	gpio_pin_intialize@_pin_config^0,w,c
   825  0018BC  1070               	iorwf	(gpio_pin_intialize@_pin_config+1)^0,w,c
   826  0018BE  B4D8               	btfsc	status,2,c
   827  0018C0  EF64  F00C         	goto	u3501
   828  0018C4  EF66  F00C         	goto	u3500
   829  0018C8                     u3501:
   830  0018C8  EF77  F00C         	goto	l5262
   831  0018CC                     u3500:
   832  0018CC  C06F  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
   833  0018D0  C070  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
   834  0018D4  30DF               	rrcf	indf2,w,c
   835  0018D6  32E8               	rrcf	wreg,f,c
   836  0018D8  32E8               	rrcf	wreg,f,c
   837  0018DA  0B07               	andlw	7
   838  0018DC  6E71               	movwf	??_gpio_pin_intialize^0,c
   839  0018DE  0E07               	movlw	7
   840  0018E0  6471               	cpfsgt	??_gpio_pin_intialize^0,c
   841  0018E2  EF75  F00C         	goto	u3511
   842  0018E6  EF77  F00C         	goto	u3510
   843  0018EA                     u3511:
   844  0018EA  EF7B  F00C         	goto	l5264
   845  0018EE                     u3510:
   846  0018EE                     l5262:
   847                           
   848                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:         ret = (Std_ReturnType)0x00;
   849  0018EE  0E00               	movlw	0
   850  0018F0  6E72               	movwf	gpio_pin_intialize@ret^0,c
   851                           
   852                           ;MCAL_Layer/GPIO/hal_gpio.c: 148:     }
   853  0018F2  EF91  F00C         	goto	l5266
   854  0018F6                     l5264:
   855                           
   856                           ;MCAL_Layer/GPIO/hal_gpio.c: 150:         ret = gpio_pin_direction_intialize(_pin_config
      +                          );
   857  0018F6  C06F  F065         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   858  0018FA  C070  F066         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_direction_intialize@_pin_config+1
   859  0018FE  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
   860  001902  6E72               	movwf	gpio_pin_intialize@ret^0,c
   861                           
   862                           ;MCAL_Layer/GPIO/hal_gpio.c: 151:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
   863  001904  C06F  F065         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
   864  001908  C070  F066         	movff	gpio_pin_intialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
   865  00190C  C06F  FFD9         	movff	gpio_pin_intialize@_pin_config,fsr2l
   866  001910  C070  FFDA         	movff	gpio_pin_intialize@_pin_config+1,fsr2h
   867  001914  0E00               	movlw	0
   868  001916  BEDF               	btfsc	indf2,7,c
   869  001918  0E01               	movlw	1
   870  00191A  6E67               	movwf	gpio_pin_write_logic@logic^0,c
   871  00191C  EC5B  F00B         	call	_gpio_pin_write_logic	;wreg free
   872  001920  6E72               	movwf	gpio_pin_intialize@ret^0,c
   873  001922                     l5266:
   874                           
   875                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     return ret;
   876  001922  5072               	movf	gpio_pin_intialize@ret^0,w,c
   877  001924  0012               	return		;funcret
   878  001926                     __end_of_gpio_pin_intialize:
   879                           	callstack 0
   880                           
   881 ;; *************** function _gpio_pin_write_logic *****************
   882 ;; Defined at:
   883 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  _pin_config     2    1[COMRAM] PTR const struct .
   886 ;;		 -> SPI_SS1(1), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), 
   887 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
   888 ;;  logic           1    3[COMRAM] enum E2924
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  ret             1   10[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      unsigned char 
   893 ;; Registers used:
   894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   900 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;Total ram usage:       10 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 2
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_gpio_pin_intialize
   911 ;;		_main
   912 ;;		_seven_segement_write_number
   913 ;;		_lcd_4bit_send_command
   914 ;;		_lcd_4bit_send_char_data
   915 ;;		_lcd_8bit_send_command
   916 ;;		_lcd_8bit_send_char_data
   917 ;;		_lcd_send_4bits
   918 ;;		_lcd_4bit_send_enable_signal
   919 ;;		_lcd_8bit_send_enable_signal
   920 ;;		_dc_motor_move_right
   921 ;;		_dc_motor_move_left
   922 ;;		_dc_motor_stop
   923 ;;		_keypad_get_value
   924 ;;		_led_turn_on
   925 ;;		_led_turn_off
   926 ;;		_relay_turn_on
   927 ;;		_relay_turn_off
   928 ;;		_Ultrasonic_Calculate_Distance
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text2
   933  0016B6                     __ptext2:
   934                           	callstack 0
   935  0016B6                     _gpio_pin_write_logic:
   936                           	callstack 28
   937  0016B6                     
   938                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret = (Std_ReturnType)0x01;
   939  0016B6  0E01               	movlw	1
   940  0016B8  6E6E               	movwf	gpio_pin_write_logic@ret^0,c
   941  0016BA                     
   942                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
   943  0016BA  5065               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   944  0016BC  1066               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
   945  0016BE  B4D8               	btfsc	status,2,c
   946  0016C0  EF64  F00B         	goto	u3411
   947  0016C4  EF66  F00B         	goto	u3410
   948  0016C8                     u3411:
   949  0016C8  EF77  F00B         	goto	l5134
   950  0016CC                     u3410:
   951  0016CC  C065  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   952  0016D0  C066  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   953  0016D4  30DF               	rrcf	indf2,w,c
   954  0016D6  32E8               	rrcf	wreg,f,c
   955  0016D8  32E8               	rrcf	wreg,f,c
   956  0016DA  0B07               	andlw	7
   957  0016DC  6E68               	movwf	??_gpio_pin_write_logic^0,c
   958  0016DE  0E07               	movlw	7
   959  0016E0  6468               	cpfsgt	??_gpio_pin_write_logic^0,c
   960  0016E2  EF75  F00B         	goto	u3421
   961  0016E6  EF77  F00B         	goto	u3420
   962  0016EA                     u3421:
   963  0016EA  EFDA  F00B         	goto	l5142
   964  0016EE                     u3420:
   965  0016EE                     l5134:
   966                           
   967                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret = (Std_ReturnType)0x00;
   968  0016EE  0E00               	movlw	0
   969  0016F0  6E6E               	movwf	gpio_pin_write_logic@ret^0,c
   970                           
   971                           ;MCAL_Layer/GPIO/hal_gpio.c: 79:     }
   972  0016F2  EFEF  F00B         	goto	l5144
   973  0016F6                     l5136:
   974                           
   975                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
   976  0016F6  C065  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   977  0016FA  C066  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   978  0016FE  30DF               	rrcf	indf2,w,c
   979  001700  32E8               	rrcf	wreg,f,c
   980  001702  32E8               	rrcf	wreg,f,c
   981  001704  0B07               	andlw	7
   982  001706  6E68               	movwf	??_gpio_pin_write_logic^0,c
   983  001708  0E01               	movlw	1
   984  00170A  6E69               	movwf	(??_gpio_pin_write_logic+1)^0,c
   985  00170C  2A68               	incf	??_gpio_pin_write_logic^0,f,c
   986  00170E  EF8B  F00B         	goto	u3434
   987  001712                     u3435:
   988  001712  90D8               	bcf	status,0,c
   989  001714  3669               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   990  001716                     u3434:
   991  001716  2E68               	decfsz	??_gpio_pin_write_logic^0,f,c
   992  001718  EF89  F00B         	goto	u3435
   993  00171C  5069               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   994  00171E  0AFF               	xorlw	255
   995  001720  6E6A               	movwf	(??_gpio_pin_write_logic+2)^0,c
   996  001722  C065  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   997  001726  C066  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   998  00172A  50DF               	movf	indf2,w,c
   999  00172C  0B07               	andlw	7
  1000  00172E  6E6B               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1001  001730  506B               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1002  001732  0D02               	mullw	2
  1003  001734  0E45               	movlw	low _lat_registers
  1004  001736  24F3               	addwf	243,w,c
  1005  001738  6ED9               	movwf	fsr2l,c
  1006  00173A  0E00               	movlw	high _lat_registers
  1007  00173C  20F4               	addwfc	prodh,w,c
  1008  00173E  6EDA               	movwf	fsr2h,c
  1009  001740  CFDE F06C          	movff	postinc2,??_gpio_pin_write_logic+4
  1010  001744  CFDD F06D          	movff	postdec2,??_gpio_pin_write_logic+5
  1011  001748  C06C  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1012  00174C  C06D  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1013  001750  506A               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1014  001752  16DF               	andwf	indf2,f,c
  1015                           
  1016                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:                 break;
  1017  001754  EFEF  F00B         	goto	l5144
  1018  001758                     l5138:
  1019                           
  1020                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  1021  001758  C065  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1022  00175C  C066  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1023  001760  30DF               	rrcf	indf2,w,c
  1024  001762  32E8               	rrcf	wreg,f,c
  1025  001764  32E8               	rrcf	wreg,f,c
  1026  001766  0B07               	andlw	7
  1027  001768  6E68               	movwf	??_gpio_pin_write_logic^0,c
  1028  00176A  0E01               	movlw	1
  1029  00176C  6E69               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1030  00176E  2A68               	incf	??_gpio_pin_write_logic^0,f,c
  1031  001770  EFBC  F00B         	goto	u3444
  1032  001774                     u3445:
  1033  001774  90D8               	bcf	status,0,c
  1034  001776  3669               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1035  001778                     u3444:
  1036  001778  2E68               	decfsz	??_gpio_pin_write_logic^0,f,c
  1037  00177A  EFBA  F00B         	goto	u3445
  1038  00177E  C065  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1039  001782  C066  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1040  001786  50DF               	movf	indf2,w,c
  1041  001788  0B07               	andlw	7
  1042  00178A  6E6A               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1043  00178C  506A               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1044  00178E  0D02               	mullw	2
  1045  001790  0E45               	movlw	low _lat_registers
  1046  001792  24F3               	addwf	243,w,c
  1047  001794  6ED9               	movwf	fsr2l,c
  1048  001796  0E00               	movlw	high _lat_registers
  1049  001798  20F4               	addwfc	prodh,w,c
  1050  00179A  6EDA               	movwf	fsr2h,c
  1051  00179C  CFDE F06B          	movff	postinc2,??_gpio_pin_write_logic+3
  1052  0017A0  CFDD F06C          	movff	postdec2,??_gpio_pin_write_logic+4
  1053  0017A4  C06B  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1054  0017A8  C06C  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1055  0017AC  5069               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1056  0017AE  12DF               	iorwf	indf2,f,c
  1057                           
  1058                           ;MCAL_Layer/GPIO/hal_gpio.c: 87:                 break;
  1059  0017B0  EFEF  F00B         	goto	l5144
  1060  0017B4                     l5142:
  1061  0017B4  5067               	movf	gpio_pin_write_logic@logic^0,w,c
  1062  0017B6  6E68               	movwf	??_gpio_pin_write_logic^0,c
  1063  0017B8  6A69               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1064                           
  1065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 1, Range of values is 0 to 0
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte            4     3 (average)
  1071                           ;	Chosen strategy is simple_byte
  1072  0017BA  5069               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1073  0017BC  0A00               	xorlw	0	; case 0
  1074  0017BE  B4D8               	btfsc	status,2,c
  1075  0017C0  EFE4  F00B         	goto	l6176
  1076  0017C4  EF77  F00B         	goto	l5134
  1077  0017C8                     l6176:
  1078                           
  1079                           ; Switch size 1, requested type "simple"
  1080                           ; Number of cases is 2, Range of values is 0 to 1
  1081                           ; switch strategies available:
  1082                           ; Name         Instructions Cycles
  1083                           ; simple_byte            7     4 (average)
  1084                           ;	Chosen strategy is simple_byte
  1085  0017C8  5068               	movf	??_gpio_pin_write_logic^0,w,c
  1086  0017CA  0A00               	xorlw	0	; case 0
  1087  0017CC  B4D8               	btfsc	status,2,c
  1088  0017CE  EF7B  F00B         	goto	l5136
  1089  0017D2  0A01               	xorlw	1	; case 1
  1090  0017D4  B4D8               	btfsc	status,2,c
  1091  0017D6  EFAC  F00B         	goto	l5138
  1092  0017DA  EF77  F00B         	goto	l5134
  1093  0017DE                     l5144:
  1094                           
  1095                           ;MCAL_Layer/GPIO/hal_gpio.c: 91:     return ret;
  1096  0017DE  506E               	movf	gpio_pin_write_logic@ret^0,w,c
  1097  0017E0  0012               	return		;funcret
  1098  0017E2                     __end_of_gpio_pin_write_logic:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _application_intialize *****************
  1102 ;; Defined at:
  1103 ;;		line 45 in file "application.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  ret             1    0        unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 3
  1124 ;; This function calls:
  1125 ;;		_ecu_layer_intialize
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text3
  1132  001B4A                     __ptext3:
  1133                           	callstack 0
  1134  001B4A                     _application_intialize:
  1135                           	callstack 27
  1136  001B4A                     
  1137                           ;application.c: 47:     ecu_layer_intialize();
  1138  001B4A  ECBA  F00D         	call	_ecu_layer_intialize	;wreg free
  1139  001B4E  0012               	return		;funcret
  1140  001B50                     __end_of_application_intialize:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _ecu_layer_intialize *****************
  1144 ;; Defined at:
  1145 ;;		line 10 in file "ECU_Layer/ecu_layer_init.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  ret             1    0        unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 2
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_application_intialize
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text4
  1174  001B74                     __ptext4:
  1175                           	callstack 0
  1176  001B74                     _ecu_layer_intialize:
  1177                           	callstack 27
  1178  001B74  0012               	return		;funcret
  1179  001B76                     __end_of_ecu_layer_intialize:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _SPI_Send_Byte *****************
  1183 ;; Defined at:
  1184 ;;		line 68 in file "MCAL_Layer/SPI/hal_spi.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  Config          2    1[COMRAM] PTR const struct .
  1187 ;;		 -> SPI_Obj(2), 
  1188 ;;  _data           1    3[COMRAM] const unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  ret             1    0        unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      unsigned char 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 2
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text5
  1215  001A5E                     __ptext5:
  1216                           	callstack 0
  1217  001A5E                     _SPI_Send_Byte:
  1218                           	callstack 28
  1219  001A5E                     
  1220                           ;MCAL_Layer/SPI/hal_spi.c: 71:     if(((void*)0) == Config){
  1221  001A5E  5065               	movf	SPI_Send_Byte@Config^0,w,c
  1222  001A60  1066               	iorwf	(SPI_Send_Byte@Config+1)^0,w,c
  1223  001A62  A4D8               	btfss	status,2,c
  1224  001A64  EF36  F00D         	goto	u3671
  1225  001A68  EF38  F00D         	goto	u3670
  1226  001A6C                     u3671:
  1227  001A6C  EF3A  F00D         	goto	l1677
  1228  001A70                     u3670:
  1229  001A70                     
  1230                           ;MCAL_Layer/SPI/hal_spi.c: 73:     }
  1231  001A70  EF44  F00D         	goto	l5392
  1232  001A74                     l1677:
  1233                           
  1234                           ;MCAL_Layer/SPI/hal_spi.c: 75:         SSPBUF = _data;
  1235  001A74  C067  FFC9         	movff	SPI_Send_Byte@_data,4041	;volatile
  1236  001A78                     l1679:
  1237  001A78  A69E               	btfss	158,3,c	;volatile
  1238  001A7A  EF41  F00D         	goto	u3681
  1239  001A7E  EF43  F00D         	goto	u3680
  1240  001A82                     u3681:
  1241  001A82  EF3C  F00D         	goto	l1679
  1242  001A86                     u3680:
  1243  001A86                     
  1244                           ;MCAL_Layer/SPI/hal_spi.c: 77:         PIR1bits.SSPIF = 0;
  1245  001A86  969E               	bcf	158,3,c	;volatile
  1246  001A88                     l5392:
  1247                           
  1248                           ;MCAL_Layer/SPI/hal_spi.c: 80:     return ret;
  1249  001A88  0E00               	movlw	0
  1250  001A8A  0012               	return		;funcret
  1251  001A8C                     __end_of_SPI_Send_Byte:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _SPI_Read_Byte *****************
  1255 ;; Defined at:
  1256 ;;		line 83 in file "MCAL_Layer/SPI/hal_spi.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  Config          2    1[COMRAM] PTR const struct .
  1259 ;;		 -> SPI_Obj(2), 
  1260 ;;  _data           2    3[COMRAM] PTR unsigned char 
  1261 ;;		 -> SPI_Msater_Side_Slave1_RetVal(1), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  ret             1    0        unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      unsigned char 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:        4 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 2
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text6
  1288  0019E6                     __ptext6:
  1289                           	callstack 0
  1290  0019E6                     _SPI_Read_Byte:
  1291                           	callstack 28
  1292  0019E6                     
  1293                           ;MCAL_Layer/SPI/hal_spi.c: 86:     if((((void*)0) == Config) || (((void*)0) == _data)){
  1294  0019E6  5065               	movf	SPI_Read_Byte@Config^0,w,c
  1295  0019E8  1066               	iorwf	(SPI_Read_Byte@Config+1)^0,w,c
  1296  0019EA  B4D8               	btfsc	status,2,c
  1297  0019EC  EFFA  F00C         	goto	u3691
  1298  0019F0  EFFC  F00C         	goto	u3690
  1299  0019F4                     u3691:
  1300  0019F4  EF05  F00D         	goto	l5402
  1301  0019F8                     u3690:
  1302  0019F8  5067               	movf	SPI_Read_Byte@_data^0,w,c
  1303  0019FA  1068               	iorwf	(SPI_Read_Byte@_data+1)^0,w,c
  1304  0019FC  A4D8               	btfss	status,2,c
  1305  0019FE  EF03  F00D         	goto	u3701
  1306  001A02  EF05  F00D         	goto	u3700
  1307  001A06                     u3701:
  1308  001A06  EF07  F00D         	goto	l1689
  1309  001A0A                     u3700:
  1310  001A0A                     l5402:
  1311                           
  1312                           ;MCAL_Layer/SPI/hal_spi.c: 88:     }
  1313  001A0A  EF14  F00D         	goto	l5406
  1314  001A0E                     l1689:
  1315  001A0E  A0C7               	btfss	199,0,c	;volatile
  1316  001A10  EF0C  F00D         	goto	u3711
  1317  001A14  EF0E  F00D         	goto	u3710
  1318  001A18                     u3711:
  1319  001A18  EF07  F00D         	goto	l1689
  1320  001A1C                     u3710:
  1321  001A1C                     
  1322                           ;MCAL_Layer/SPI/hal_spi.c: 91:         *_data = SSPBUF;
  1323  001A1C  C067  FFD9         	movff	SPI_Read_Byte@_data,fsr2l
  1324  001A20  C068  FFDA         	movff	SPI_Read_Byte@_data+1,fsr2h
  1325  001A24  CFC9 FFDF          	movff	4041,indf2	;volatile
  1326  001A28                     l5406:
  1327                           
  1328                           ;MCAL_Layer/SPI/hal_spi.c: 94:     return ret;
  1329  001A28  0E00               	movlw	0
  1330  001A2A  0012               	return		;funcret
  1331  001A2C                     __end_of_SPI_Read_Byte:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _SPI_Init *****************
  1335 ;; Defined at:
  1336 ;;		line 16 in file "MCAL_Layer/SPI/hal_spi.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  Config          2   17[COMRAM] PTR const struct .
  1339 ;;		 -> SPI_Obj(2), 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  ret             1    0        unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;Total ram usage:        3 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 4
  1358 ;; This function calls:
  1359 ;;		_MSSP_SPI_Interrupt_Init
  1360 ;;		_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
  1361 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text7
  1368  00141C                     __ptext7:
  1369                           	callstack 0
  1370  00141C                     _SPI_Init:
  1371                           	callstack 26
  1372  00141C                     
  1373                           ;MCAL_Layer/SPI/hal_spi.c: 19:     if(((void*)0) == Config){
  1374  00141C  5075               	movf	SPI_Init@Config^0,w,c
  1375  00141E  1076               	iorwf	(SPI_Init@Config+1)^0,w,c
  1376  001420  A4D8               	btfss	status,2,c
  1377  001422  EF15  F00A         	goto	u3601
  1378  001426  EF17  F00A         	goto	u3600
  1379  00142A                     u3601:
  1380  00142A  EF19  F00A         	goto	l1660
  1381  00142E                     u3600:
  1382  00142E                     
  1383                           ;MCAL_Layer/SPI/hal_spi.c: 21:     }
  1384  00142E  EFB7  F00A         	goto	l5382
  1385  001432                     l1660:
  1386                           
  1387                           ;MCAL_Layer/SPI/hal_spi.c: 24:         (SSPCON1bits.SSPEN = 0);
  1388  001432  9AC6               	bcf	198,5,c	;volatile
  1389  001434                     
  1390                           ;MCAL_Layer/SPI/hal_spi.c: 26:         SSPCON1bits.SSPM = Config->spi_mode;
  1391  001434  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1392  001438  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1393  00143C  50DF               	movf	indf2,w,c
  1394  00143E  6E77               	movwf	??_SPI_Init^0,c
  1395  001440  50C6               	movf	198,w,c	;volatile
  1396  001442  1877               	xorwf	??_SPI_Init^0,w,c
  1397  001444  0BF0               	andlw	-16
  1398  001446  1877               	xorwf	??_SPI_Init^0,w,c
  1399  001448  6EC6               	movwf	198,c	;volatile
  1400  00144A                     
  1401                           ;MCAL_Layer/SPI/hal_spi.c: 28:         if((Config->spi_mode == 0) || (Config->spi_mode =
      +                          = 1) ||
  1402  00144A  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1403  00144E  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1404  001452  50DF               	movf	indf2,w,c
  1405  001454  B4D8               	btfsc	status,2,c
  1406  001456  EF2F  F00A         	goto	u3611
  1407  00145A  EF31  F00A         	goto	u3610
  1408  00145E                     u3611:
  1409  00145E  EF57  F00A         	goto	l5364
  1410  001462                     u3610:
  1411  001462  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1412  001466  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1413  00146A  04DE               	decf	postinc2,w,c
  1414  00146C  B4D8               	btfsc	status,2,c
  1415  00146E  EF3B  F00A         	goto	u3621
  1416  001472  EF3D  F00A         	goto	u3620
  1417  001476                     u3621:
  1418  001476  EF57  F00A         	goto	l5364
  1419  00147A                     u3620:
  1420  00147A  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1421  00147E  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1422  001482  0E02               	movlw	2
  1423  001484  18DE               	xorwf	postinc2,w,c
  1424  001486  B4D8               	btfsc	status,2,c
  1425  001488  EF48  F00A         	goto	u3631
  1426  00148C  EF4A  F00A         	goto	u3630
  1427  001490                     u3631:
  1428  001490  EF57  F00A         	goto	l5364
  1429  001494                     u3630:
  1430  001494  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1431  001498  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1432  00149C  0E03               	movlw	3
  1433  00149E  18DE               	xorwf	postinc2,w,c
  1434  0014A0  A4D8               	btfss	status,2,c
  1435  0014A2  EF55  F00A         	goto	u3641
  1436  0014A6  EF57  F00A         	goto	u3640
  1437  0014AA                     u3641:
  1438  0014AA  EF5F  F00A         	goto	l5366
  1439  0014AE                     u3640:
  1440  0014AE                     l5364:
  1441                           
  1442                           ;MCAL_Layer/SPI/hal_spi.c: 29:             (Config->spi_mode == 2) || (Config->spi_mode 
      +                          == 3)){;MCAL_Layer/SPI/hal_spi.c: 30:             MSSP_SPI_Msster_Mode_GPIO_PIN_Configur
      +                          ations(Config);
  1443  0014AE  C075  F06E         	movff	SPI_Init@Config,MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@Config
  1444  0014B2  C076  F06F         	movff	SPI_Init@Config+1,MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@Config+1
  1445  0014B6  EC16  F00D         	call	_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations	;wreg free
  1446                           
  1447                           ;MCAL_Layer/SPI/hal_spi.c: 31:         }
  1448  0014BA  EF7F  F00A         	goto	l5372
  1449  0014BE                     l5366:
  1450  0014BE  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1451  0014C2  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1452  0014C6  0E04               	movlw	4
  1453  0014C8  18DE               	xorwf	postinc2,w,c
  1454  0014CA  B4D8               	btfsc	status,2,c
  1455  0014CC  EF6A  F00A         	goto	u3651
  1456  0014D0  EF6C  F00A         	goto	u3650
  1457  0014D4                     u3651:
  1458  0014D4  EF79  F00A         	goto	l5370
  1459  0014D8                     u3650:
  1460  0014D8  C075  FFD9         	movff	SPI_Init@Config,fsr2l
  1461  0014DC  C076  FFDA         	movff	SPI_Init@Config+1,fsr2h
  1462  0014E0  0E05               	movlw	5
  1463  0014E2  18DE               	xorwf	postinc2,w,c
  1464  0014E4  A4D8               	btfss	status,2,c
  1465  0014E6  EF77  F00A         	goto	u3661
  1466  0014EA  EF79  F00A         	goto	u3660
  1467  0014EE                     u3661:
  1468  0014EE  EF7F  F00A         	goto	l5372
  1469  0014F2                     u3660:
  1470  0014F2                     l5370:
  1471                           
  1472                           ;MCAL_Layer/SPI/hal_spi.c: 33:             MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations(C
      +                          onfig);
  1473  0014F2  C075  F06E         	movff	SPI_Init@Config,MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config
  1474  0014F6  C076  F06F         	movff	SPI_Init@Config+1,MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config+1
  1475  0014FA  ECC5  F00C         	call	_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations	;wreg free
  1476  0014FE                     l5372:
  1477                           
  1478                           ;MCAL_Layer/SPI/hal_spi.c: 36:         SSPCON1bits.CKP = Config->spi_config.ClockPolarit
      +                          y;
  1479  0014FE  EE20 F001          	lfsr	2,1
  1480  001502  5075               	movf	SPI_Init@Config^0,w,c
  1481  001504  26D9               	addwf	fsr2l,f,c
  1482  001506  5076               	movf	(SPI_Init@Config+1)^0,w,c
  1483  001508  22DA               	addwfc	fsr2h,f,c
  1484  00150A  50DF               	movf	indf2,w,c
  1485  00150C  0B03               	andlw	3
  1486  00150E  6E77               	movwf	??_SPI_Init^0,c
  1487  001510  3A77               	swapf	??_SPI_Init^0,f,c
  1488  001512  50C6               	movf	198,w,c	;volatile
  1489  001514  1877               	xorwf	??_SPI_Init^0,w,c
  1490  001516  0BEF               	andlw	-17
  1491  001518  1877               	xorwf	??_SPI_Init^0,w,c
  1492  00151A  6EC6               	movwf	198,c	;volatile
  1493  00151C                     
  1494                           ;MCAL_Layer/SPI/hal_spi.c: 38:         SSPSTATbits.SMP = Config->spi_config.SampleSelect
      +                          ;
  1495  00151C  EE20 F001          	lfsr	2,1
  1496  001520  5075               	movf	SPI_Init@Config^0,w,c
  1497  001522  26D9               	addwf	fsr2l,f,c
  1498  001524  5076               	movf	(SPI_Init@Config+1)^0,w,c
  1499  001526  22DA               	addwfc	fsr2h,f,c
  1500  001528  30DF               	rrcf	indf2,w,c
  1501  00152A  32E8               	rrcf	wreg,f,c
  1502  00152C  0B03               	andlw	3
  1503  00152E  6E77               	movwf	??_SPI_Init^0,c
  1504  001530  3277               	rrcf	??_SPI_Init^0,f,c
  1505  001532  3277               	rrcf	??_SPI_Init^0,f,c
  1506  001534  50C7               	movf	199,w,c	;volatile
  1507  001536  1877               	xorwf	??_SPI_Init^0,w,c
  1508  001538  0B7F               	andlw	-129
  1509  00153A  1877               	xorwf	??_SPI_Init^0,w,c
  1510  00153C  6EC7               	movwf	199,c	;volatile
  1511  00153E                     
  1512                           ;MCAL_Layer/SPI/hal_spi.c: 40:          SSPSTATbits.CKE = Config->spi_config.ClockSelect
      +                          ;
  1513  00153E  EE20 F001          	lfsr	2,1
  1514  001542  5075               	movf	SPI_Init@Config^0,w,c
  1515  001544  26D9               	addwf	fsr2l,f,c
  1516  001546  5076               	movf	(SPI_Init@Config+1)^0,w,c
  1517  001548  22DA               	addwfc	fsr2h,f,c
  1518  00154A  38DF               	swapf	indf2,w,c
  1519  00154C  0B03               	andlw	3
  1520  00154E  6E77               	movwf	??_SPI_Init^0,c
  1521  001550  3A77               	swapf	??_SPI_Init^0,f,c
  1522  001552  4677               	rlncf	??_SPI_Init^0,f,c
  1523  001554  4677               	rlncf	??_SPI_Init^0,f,c
  1524  001556  50C7               	movf	199,w,c	;volatile
  1525  001558  1877               	xorwf	??_SPI_Init^0,w,c
  1526  00155A  0BBF               	andlw	-65
  1527  00155C  1877               	xorwf	??_SPI_Init^0,w,c
  1528  00155E  6EC7               	movwf	199,c	;volatile
  1529  001560                     
  1530                           ;MCAL_Layer/SPI/hal_spi.c: 42:         MSSP_SPI_Interrupt_Init(Config);
  1531  001560  C075  F065         	movff	SPI_Init@Config,MSSP_SPI_Interrupt_Init@Config
  1532  001564  C076  F066         	movff	SPI_Init@Config+1,MSSP_SPI_Interrupt_Init@Config+1
  1533  001568  ECBB  F00D         	call	_MSSP_SPI_Interrupt_Init	;wreg free
  1534  00156C                     
  1535                           ;MCAL_Layer/SPI/hal_spi.c: 44:         (SSPCON1bits.SSPEN = 1);
  1536  00156C  8AC6               	bsf	198,5,c	;volatile
  1537  00156E                     l5382:
  1538                           
  1539                           ;MCAL_Layer/SPI/hal_spi.c: 47:     return ret;
  1540  00156E  0E00               	movlw	0
  1541  001570  0012               	return		;funcret
  1542  001572                     __end_of_SPI_Init:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations *****************
  1546 ;; Defined at:
  1547 ;;		line 152 in file "MCAL_Layer/SPI/hal_spi.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  Config          2   10[COMRAM] PTR const struct .
  1550 ;;		 -> SPI_Obj(2), 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  SPI_SS          1   16[COMRAM] struct .
  1553 ;;  SPI_CLK         1   15[COMRAM] struct .
  1554 ;;  SPI_SDI         1   14[COMRAM] struct .
  1555 ;;  SPI_SDO         1   13[COMRAM] struct .
  1556 ;;  ret             1    0        unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:        7 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 3
  1573 ;; This function calls:
  1574 ;;		_gpio_pin_direction_intialize
  1575 ;; This function is called by:
  1576 ;;		_SPI_Init
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text8
  1581  00198A                     __ptext8:
  1582                           	callstack 0
  1583  00198A                     _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations:
  1584                           	callstack 26
  1585  00198A                     
  1586                           ;MCAL_Layer/SPI/hal_spi.c: 154:     pin_config_t SPI_SDO = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN5, .direction = GPIO_DIRECTION_OUTPUT};
  1587  00198A  C05C  F071         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3055,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SDO
  1588  00198E                     
  1589                           ;MCAL_Layer/SPI/hal_spi.c: 155:     pin_config_t SPI_SDI = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN4, .direction = GPIO_DIRECTION_INPUT};
  1590  00198E  C05B  F072         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3057,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SDI
  1591  001992                     
  1592                           ;MCAL_Layer/SPI/hal_spi.c: 156:     pin_config_t SPI_CLK = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN3, .direction = GPIO_DIRECTION_INPUT};
  1593  001992  C05A  F073         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3059,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_CLK
  1594  001996                     
  1595                           ;MCAL_Layer/SPI/hal_spi.c: 157:     pin_config_t SPI_SS = {.port = PORTA_INDEX, .pin = G
      +                          PIO_PIN5, .direction = GPIO_DIRECTION_INPUT};
  1596  001996  C059  F074         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3061,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SS
  1597  00199A  0E71               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO
  1598  00199C  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1599  00199E  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO
  1600  0019A0  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1601  0019A2  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1602  0019A6  0E72               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI
  1603  0019A8  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1604  0019AA  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI
  1605  0019AC  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1606  0019AE  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1607  0019B2  0E73               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK
  1608  0019B4  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1609  0019B6  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK
  1610  0019B8  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1611  0019BA  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1612  0019BE                     
  1613                           ;MCAL_Layer/SPI/hal_spi.c: 163:     if(4 == Config->spi_mode){
  1614  0019BE  C06E  FFD9         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config,fsr2l
  1615  0019C2  C06F  FFDA         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config+1,fsr2h
  1616  0019C6  0E04               	movlw	4
  1617  0019C8  18DE               	xorwf	postinc2,w,c
  1618  0019CA  A4D8               	btfss	status,2,c
  1619  0019CC  EFEA  F00C         	goto	u3491
  1620  0019D0  EFEC  F00C         	goto	u3490
  1621  0019D4                     u3491:
  1622  0019D4  EFF2  F00C         	goto	l1725
  1623  0019D8                     u3490:
  1624  0019D8  0E74               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS
  1625  0019DA  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1626  0019DC  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS
  1627  0019DE  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1628  0019E0  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1629  0019E4                     l1725:
  1630  0019E4  0012               	return		;funcret
  1631  0019E6                     __end_of_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations *****************
  1635 ;; Defined at:
  1636 ;;		line 141 in file "MCAL_Layer/SPI/hal_spi.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  Config          2   10[COMRAM] PTR const struct .
  1639 ;;		 -> SPI_Obj(2), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  SPI_CLK         1   14[COMRAM] struct .
  1642 ;;  SPI_SDI         1   13[COMRAM] struct .
  1643 ;;  SPI_SDO         1   12[COMRAM] struct .
  1644 ;;  ret             1    0        unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;Total ram usage:        5 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 3
  1661 ;; This function calls:
  1662 ;;		_gpio_pin_direction_intialize
  1663 ;; This function is called by:
  1664 ;;		_SPI_Init
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text9
  1669  001A2C                     __ptext9:
  1670                           	callstack 0
  1671  001A2C                     _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations:
  1672                           	callstack 26
  1673  001A2C                     
  1674                           ;MCAL_Layer/SPI/hal_spi.c: 143:     pin_config_t SPI_SDO = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN5, .direction = GPIO_DIRECTION_OUTPUT};
  1675  001A2C  C05F  F070         	movff	MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3046,MSSP_SPI_Msster_Mode_GPIO_PIN_
      +                          Configurations@SPI_SDO
  1676  001A30                     
  1677                           ;MCAL_Layer/SPI/hal_spi.c: 144:     pin_config_t SPI_SDI = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN4, .direction = GPIO_DIRECTION_INPUT};
  1678  001A30  C05E  F071         	movff	MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3048,MSSP_SPI_Msster_Mode_GPIO_PIN_
      +                          Configurations@SPI_SDI
  1679  001A34                     
  1680                           ;MCAL_Layer/SPI/hal_spi.c: 145:     pin_config_t SPI_CLK = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN3, .direction = GPIO_DIRECTION_OUTPUT};
  1681  001A34  C05D  F072         	movff	MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3050,MSSP_SPI_Msster_Mode_GPIO_PIN_
      +                          Configurations@SPI_CLK
  1682  001A38  0E70               	movlw	low MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO
  1683  001A3A  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1684  001A3C  0E00               	movlw	high MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO
  1685  001A3E  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1686  001A40  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1687  001A44  0E71               	movlw	low MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI
  1688  001A46  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1689  001A48  0E00               	movlw	high MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI
  1690  001A4A  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1691  001A4C  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1692  001A50  0E72               	movlw	low MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK
  1693  001A52  6E65               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
  1694  001A54  0E00               	movlw	high MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK
  1695  001A56  6E66               	movwf	(gpio_pin_direction_intialize@_pin_config+1)^0,c
  1696  001A58  ECB9  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  1697  001A5C  0012               	return		;funcret
  1698  001A5E                     __end_of_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _gpio_pin_direction_intialize *****************
  1702 ;; Defined at:
  1703 ;;		line 25 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  _pin_config     2    1[COMRAM] PTR const struct .
  1706 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(1), M
      +SSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
  1707 ;;		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(1), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(1)
      +, MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(1), SPI_SS1(1), 
  1708 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  ret             1    9[COMRAM] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;Total ram usage:        9 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_gpio_pin_intialize
  1731 ;;		_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
  1732 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  1733 ;;		_button_initialize
  1734 ;;		_keypad_initialize
  1735 ;;		_Interrupt_RBx_Init
  1736 ;;		_Interrupt_INTx_Pin_Init
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text10
  1741  001572                     __ptext10:
  1742                           	callstack 0
  1743  001572                     _gpio_pin_direction_intialize:
  1744                           	callstack 27
  1745  001572                     
  1746                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1747  001572  0E01               	movlw	1
  1748  001574  6E6D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1749  001576                     
  1750                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1751  001576  5065               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1752  001578  1066               	iorwf	(gpio_pin_direction_intialize@_pin_config+1)^0,w,c
  1753  00157A  B4D8               	btfsc	status,2,c
  1754  00157C  EFC2  F00A         	goto	u3351
  1755  001580  EFC4  F00A         	goto	u3350
  1756  001584                     u3351:
  1757  001584  EFD5  F00A         	goto	l5110
  1758  001588                     u3350:
  1759  001588  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1760  00158C  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1761  001590  30DF               	rrcf	indf2,w,c
  1762  001592  32E8               	rrcf	wreg,f,c
  1763  001594  32E8               	rrcf	wreg,f,c
  1764  001596  0B07               	andlw	7
  1765  001598  6E67               	movwf	??_gpio_pin_direction_intialize^0,c
  1766  00159A  0E07               	movlw	7
  1767  00159C  6467               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1768  00159E  EFD3  F00A         	goto	u3361
  1769  0015A2  EFD5  F00A         	goto	u3360
  1770  0015A6                     u3361:
  1771  0015A6  EF38  F00B         	goto	l5118
  1772  0015AA                     u3360:
  1773  0015AA                     l5110:
  1774                           
  1775                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:         ret = (Std_ReturnType)0x00;
  1776  0015AA  0E00               	movlw	0
  1777  0015AC  6E6D               	movwf	gpio_pin_direction_intialize@ret^0,c
  1778                           
  1779                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
  1780  0015AE  EF59  F00B         	goto	l5120
  1781  0015B2                     l5112:
  1782                           
  1783                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
  1784  0015B2  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1785  0015B6  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1786  0015BA  30DF               	rrcf	indf2,w,c
  1787  0015BC  32E8               	rrcf	wreg,f,c
  1788  0015BE  32E8               	rrcf	wreg,f,c
  1789  0015C0  0B07               	andlw	7
  1790  0015C2  6E67               	movwf	??_gpio_pin_direction_intialize^0,c
  1791  0015C4  0E01               	movlw	1
  1792  0015C6  6E68               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1793  0015C8  2A67               	incf	??_gpio_pin_direction_intialize^0,f,c
  1794  0015CA  EFE9  F00A         	goto	u3374
  1795  0015CE                     u3375:
  1796  0015CE  90D8               	bcf	status,0,c
  1797  0015D0  3668               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1798  0015D2                     u3374:
  1799  0015D2  2E67               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1800  0015D4  EFE7  F00A         	goto	u3375
  1801  0015D8  5068               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1802  0015DA  0AFF               	xorlw	255
  1803  0015DC  6E69               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1804  0015DE  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1805  0015E2  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1806  0015E6  50DF               	movf	indf2,w,c
  1807  0015E8  0B07               	andlw	7
  1808  0015EA  6E6A               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  1809  0015EC  506A               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  1810  0015EE  0D02               	mullw	2
  1811  0015F0  0E4F               	movlw	low _tris_registers
  1812  0015F2  24F3               	addwf	243,w,c
  1813  0015F4  6ED9               	movwf	fsr2l,c
  1814  0015F6  0E00               	movlw	high _tris_registers
  1815  0015F8  20F4               	addwfc	prodh,w,c
  1816  0015FA  6EDA               	movwf	fsr2h,c
  1817  0015FC  CFDE F06B          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1818  001600  CFDD F06C          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1819  001604  C06B  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1820  001608  C06C  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1821  00160C  5069               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1822  00160E  16DF               	andwf	indf2,f,c
  1823                           
  1824                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1825  001610  EF59  F00B         	goto	l5120
  1826  001614                     l5114:
  1827                           
  1828                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
  1829  001614  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1830  001618  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1831  00161C  30DF               	rrcf	indf2,w,c
  1832  00161E  32E8               	rrcf	wreg,f,c
  1833  001620  32E8               	rrcf	wreg,f,c
  1834  001622  0B07               	andlw	7
  1835  001624  6E67               	movwf	??_gpio_pin_direction_intialize^0,c
  1836  001626  0E01               	movlw	1
  1837  001628  6E68               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1838  00162A  2A67               	incf	??_gpio_pin_direction_intialize^0,f,c
  1839  00162C  EF1A  F00B         	goto	u3384
  1840  001630                     u3385:
  1841  001630  90D8               	bcf	status,0,c
  1842  001632  3668               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1843  001634                     u3384:
  1844  001634  2E67               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1845  001636  EF18  F00B         	goto	u3385
  1846  00163A  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1847  00163E  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1848  001642  50DF               	movf	indf2,w,c
  1849  001644  0B07               	andlw	7
  1850  001646  6E69               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1851  001648  5069               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1852  00164A  0D02               	mullw	2
  1853  00164C  0E4F               	movlw	low _tris_registers
  1854  00164E  24F3               	addwf	243,w,c
  1855  001650  6ED9               	movwf	fsr2l,c
  1856  001652  0E00               	movlw	high _tris_registers
  1857  001654  20F4               	addwfc	prodh,w,c
  1858  001656  6EDA               	movwf	fsr2h,c
  1859  001658  CFDE F06A          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1860  00165C  CFDD F06B          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1861  001660  C06A  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1862  001664  C06B  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1863  001668  5068               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1864  00166A  12DF               	iorwf	indf2,f,c
  1865                           
  1866                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:                 break;
  1867  00166C  EF59  F00B         	goto	l5120
  1868  001670                     l5118:
  1869  001670  C065  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1870  001674  C066  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1871  001678  BCDF               	btfsc	indf2,6,c
  1872  00167A  EF41  F00B         	goto	u3391
  1873  00167E  EF44  F00B         	goto	u3390
  1874  001682                     u3391:
  1875  001682  0E01               	movlw	1
  1876  001684  EF45  F00B         	goto	u3400
  1877  001688                     u3390:
  1878  001688  0E00               	movlw	0
  1879  00168A                     u3400:
  1880  00168A  6E67               	movwf	??_gpio_pin_direction_intialize^0,c
  1881  00168C  6A68               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1882                           
  1883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1884                           ; Switch size 1, requested type "simple"
  1885                           ; Number of cases is 1, Range of values is 0 to 0
  1886                           ; switch strategies available:
  1887                           ; Name         Instructions Cycles
  1888                           ; simple_byte            4     3 (average)
  1889                           ;	Chosen strategy is simple_byte
  1890  00168E  5068               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1891  001690  0A00               	xorlw	0	; case 0
  1892  001692  B4D8               	btfsc	status,2,c
  1893  001694  EF4E  F00B         	goto	l6178
  1894  001698  EFD5  F00A         	goto	l5110
  1895  00169C                     l6178:
  1896                           
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 2, Range of values is 0 to 1
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            7     4 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903  00169C  5067               	movf	??_gpio_pin_direction_intialize^0,w,c
  1904  00169E  0A00               	xorlw	0	; case 0
  1905  0016A0  B4D8               	btfsc	status,2,c
  1906  0016A2  EFD9  F00A         	goto	l5112
  1907  0016A6  0A01               	xorlw	1	; case 1
  1908  0016A8  B4D8               	btfsc	status,2,c
  1909  0016AA  EF0A  F00B         	goto	l5114
  1910  0016AE  EFD5  F00A         	goto	l5110
  1911  0016B2                     l5120:
  1912                           
  1913                           ;MCAL_Layer/GPIO/hal_gpio.c: 41:     return ret;
  1914  0016B2  506D               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1915  0016B4  0012               	return		;funcret
  1916  0016B6                     __end_of_gpio_pin_direction_intialize:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _MSSP_SPI_Interrupt_Init *****************
  1920 ;; Defined at:
  1921 ;;		line 114 in file "MCAL_Layer/SPI/hal_spi.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  Config          2    1[COMRAM] PTR const struct .
  1924 ;;		 -> SPI_Obj(2), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		None
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_SPI_Init
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text11
  1951  001B76                     __ptext11:
  1952                           	callstack 0
  1953  001B76                     _MSSP_SPI_Interrupt_Init:
  1954                           	callstack 27
  1955  001B76  0012               	return		;funcret
  1956  001B78                     __end_of_MSSP_SPI_Interrupt_Init:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _InterruptManager *****************
  1960 ;; Defined at:
  1961 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		_ADC_ISR
  1984 ;;		_CCP1_ISR
  1985 ;;		_CCP2_ISR
  1986 ;;		_EUSART_RX_ISR
  1987 ;;		_EUSART_TX_ISR
  1988 ;;		_INT0_ISR
  1989 ;;		_INT1_ISR
  1990 ;;		_INT2_ISR
  1991 ;;		_MSSP_I2C_BC_ISR
  1992 ;;		_MSSP_I2C_ISR
  1993 ;;		_MSSP_SPI_ISR
  1994 ;;		_RB4_ISR
  1995 ;;		_RB5_ISR
  1996 ;;		_RB6_ISR
  1997 ;;		_RB7_ISR
  1998 ;;		_TMR0_ISR
  1999 ;;		_TMR1_ISR
  2000 ;;		_TMR2_ISR
  2001 ;;		_TMR3_ISR
  2002 ;; This function is called by:
  2003 ;;		Interrupt level 2
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	intcode
  2008  000008                     __pintcode:
  2009                           	callstack 0
  2010  000008                     _InterruptManager:
  2011                           	callstack 26
  2012                           
  2013                           ;incstack = 0
  2014  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2015  00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  2016                           
  2017                           	psect	intcode_body
  2018  001016                     __pintcode_body:
  2019                           	callstack 26
  2020  001016                     int_func:
  2021                           	callstack 26
  2022  001016  0006               	pop		; remove dummy address from shadow register refresh
  2023  001018                     
  2024                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  2025  001018  A8F2               	btfss	242,4,c	;volatile
  2026  00101A  EF11  F008         	goto	i2u222_41
  2027  00101E  EF13  F008         	goto	i2u222_40
  2028  001022                     i2u222_41:
  2029  001022  EF1C  F008         	goto	i2l1216
  2030  001026                     i2u222_40:
  2031  001026  A2F2               	btfss	242,1,c	;volatile
  2032  001028  EF18  F008         	goto	i2u223_41
  2033  00102C  EF1A  F008         	goto	i2u223_40
  2034  001030                     i2u223_41:
  2035  001030  EF1C  F008         	goto	i2l1216
  2036  001034                     i2u223_40:
  2037  001034                     
  2038                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
  2039  001034  ECB0  F00D         	call	_INT0_ISR	;wreg free
  2040  001038                     i2l1216:
  2041                           
  2042                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  2043  001038  A6F0               	btfss	240,3,c	;volatile
  2044  00103A  EF21  F008         	goto	i2u224_41
  2045  00103E  EF23  F008         	goto	i2u224_40
  2046  001042                     i2u224_41:
  2047  001042  EF2C  F008         	goto	i2l1218
  2048  001046                     i2u224_40:
  2049  001046  A0F0               	btfss	240,0,c	;volatile
  2050  001048  EF28  F008         	goto	i2u225_41
  2051  00104C  EF2A  F008         	goto	i2u225_40
  2052  001050                     i2u225_41:
  2053  001050  EF2C  F008         	goto	i2l1218
  2054  001054                     i2u225_40:
  2055  001054                     
  2056                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
  2057  001054  ECAE  F00D         	call	_INT1_ISR	;wreg free
  2058  001058                     i2l1218:
  2059                           
  2060                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  2061  001058  A8F0               	btfss	240,4,c	;volatile
  2062  00105A  EF31  F008         	goto	i2u226_41
  2063  00105E  EF33  F008         	goto	i2u226_40
  2064  001062                     i2u226_41:
  2065  001062  EF3C  F008         	goto	i2l1220
  2066  001066                     i2u226_40:
  2067  001066  A2F0               	btfss	240,1,c	;volatile
  2068  001068  EF38  F008         	goto	i2u227_41
  2069  00106C  EF3A  F008         	goto	i2u227_40
  2070  001070                     i2u227_41:
  2071  001070  EF3C  F008         	goto	i2l1220
  2072  001074                     i2u227_40:
  2073  001074                     
  2074                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
  2075  001074  ECAC  F00D         	call	_INT2_ISR	;wreg free
  2076  001078                     i2l1220:
  2077                           
  2078                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2079  001078  A6F2               	btfss	242,3,c	;volatile
  2080  00107A  EF41  F008         	goto	i2u228_41
  2081  00107E  EF43  F008         	goto	i2u228_40
  2082  001082                     i2u228_41:
  2083  001082  EF5E  F008         	goto	i2l1222
  2084  001086                     i2u228_40:
  2085  001086  A0F2               	btfss	242,0,c	;volatile
  2086  001088  EF48  F008         	goto	i2u229_41
  2087  00108C  EF4A  F008         	goto	i2u229_40
  2088  001090                     i2u229_41:
  2089  001090  EF5E  F008         	goto	i2l1222
  2090  001094                     i2u229_40:
  2091  001094  A881               	btfss	129,4,c	;volatile
  2092  001096  EF4F  F008         	goto	i2u230_41
  2093  00109A  EF51  F008         	goto	i2u230_40
  2094  00109E                     i2u230_41:
  2095  00109E  EF5E  F008         	goto	i2l1222
  2096  0010A2                     i2u230_40:
  2097  0010A2  0463               	decf	_RB4_Flag^0,w,c	;volatile
  2098  0010A4  A4D8               	btfss	status,2,c
  2099  0010A6  EF57  F008         	goto	i2u231_41
  2100  0010AA  EF59  F008         	goto	i2u231_40
  2101  0010AE                     i2u231_41:
  2102  0010AE  EF5E  F008         	goto	i2l1222
  2103  0010B2                     i2u231_40:
  2104  0010B2                     
  2105                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
  2106  0010B2  0E00               	movlw	0
  2107  0010B4  6E63               	movwf	_RB4_Flag^0,c	;volatile
  2108  0010B6                     
  2109                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
  2110  0010B6  0E00               	movlw	0
  2111  0010B8  EC7D  F00D         	call	_RB4_ISR
  2112  0010BC                     i2l1222:
  2113                           
  2114                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2115  0010BC  A6F2               	btfss	242,3,c	;volatile
  2116  0010BE  EF63  F008         	goto	i2u232_41
  2117  0010C2  EF65  F008         	goto	i2u232_40
  2118  0010C6                     i2u232_41:
  2119  0010C6  EF80  F008         	goto	i2l1224
  2120  0010CA                     i2u232_40:
  2121  0010CA  A0F2               	btfss	242,0,c	;volatile
  2122  0010CC  EF6A  F008         	goto	i2u233_41
  2123  0010D0  EF6C  F008         	goto	i2u233_40
  2124  0010D4                     i2u233_41:
  2125  0010D4  EF80  F008         	goto	i2l1224
  2126  0010D8                     i2u233_40:
  2127  0010D8  B881               	btfsc	129,4,c	;volatile
  2128  0010DA  EF71  F008         	goto	i2u234_41
  2129  0010DE  EF73  F008         	goto	i2u234_40
  2130  0010E2                     i2u234_41:
  2131  0010E2  EF80  F008         	goto	i2l1224
  2132  0010E6                     i2u234_40:
  2133  0010E6  5063               	movf	_RB4_Flag^0,w,c	;volatile
  2134  0010E8  A4D8               	btfss	status,2,c
  2135  0010EA  EF79  F008         	goto	i2u235_41
  2136  0010EE  EF7B  F008         	goto	i2u235_40
  2137  0010F2                     i2u235_41:
  2138  0010F2  EF80  F008         	goto	i2l1224
  2139  0010F6                     i2u235_40:
  2140  0010F6                     
  2141                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
  2142  0010F6  0E01               	movlw	1
  2143  0010F8  6E63               	movwf	_RB4_Flag^0,c	;volatile
  2144  0010FA                     
  2145                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
  2146  0010FA  0E01               	movlw	1
  2147  0010FC  EC7D  F00D         	call	_RB4_ISR
  2148  001100                     i2l1224:
  2149                           
  2150                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2151  001100  A6F2               	btfss	242,3,c	;volatile
  2152  001102  EF85  F008         	goto	i2u236_41
  2153  001106  EF87  F008         	goto	i2u236_40
  2154  00110A                     i2u236_41:
  2155  00110A  EFA2  F008         	goto	i2l1226
  2156  00110E                     i2u236_40:
  2157  00110E  A0F2               	btfss	242,0,c	;volatile
  2158  001110  EF8C  F008         	goto	i2u237_41
  2159  001114  EF8E  F008         	goto	i2u237_40
  2160  001118                     i2u237_41:
  2161  001118  EFA2  F008         	goto	i2l1226
  2162  00111C                     i2u237_40:
  2163  00111C  AA81               	btfss	129,5,c	;volatile
  2164  00111E  EF93  F008         	goto	i2u238_41
  2165  001122  EF95  F008         	goto	i2u238_40
  2166  001126                     i2u238_41:
  2167  001126  EFA2  F008         	goto	i2l1226
  2168  00112A                     i2u238_40:
  2169  00112A  0462               	decf	_RB5_Flag^0,w,c	;volatile
  2170  00112C  A4D8               	btfss	status,2,c
  2171  00112E  EF9B  F008         	goto	i2u239_41
  2172  001132  EF9D  F008         	goto	i2u239_40
  2173  001136                     i2u239_41:
  2174  001136  EFA2  F008         	goto	i2l1226
  2175  00113A                     i2u239_40:
  2176  00113A                     
  2177                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
  2178  00113A  0E00               	movlw	0
  2179  00113C  6E62               	movwf	_RB5_Flag^0,c	;volatile
  2180  00113E                     
  2181                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
  2182  00113E  0E00               	movlw	0
  2183  001140  EC70  F00D         	call	_RB5_ISR
  2184  001144                     i2l1226:
  2185                           
  2186                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2187  001144  A6F2               	btfss	242,3,c	;volatile
  2188  001146  EFA7  F008         	goto	i2u240_41
  2189  00114A  EFA9  F008         	goto	i2u240_40
  2190  00114E                     i2u240_41:
  2191  00114E  EFC4  F008         	goto	i2l1228
  2192  001152                     i2u240_40:
  2193  001152  A0F2               	btfss	242,0,c	;volatile
  2194  001154  EFAE  F008         	goto	i2u241_41
  2195  001158  EFB0  F008         	goto	i2u241_40
  2196  00115C                     i2u241_41:
  2197  00115C  EFC4  F008         	goto	i2l1228
  2198  001160                     i2u241_40:
  2199  001160  BA81               	btfsc	129,5,c	;volatile
  2200  001162  EFB5  F008         	goto	i2u242_41
  2201  001166  EFB7  F008         	goto	i2u242_40
  2202  00116A                     i2u242_41:
  2203  00116A  EFC4  F008         	goto	i2l1228
  2204  00116E                     i2u242_40:
  2205  00116E  5062               	movf	_RB5_Flag^0,w,c	;volatile
  2206  001170  A4D8               	btfss	status,2,c
  2207  001172  EFBD  F008         	goto	i2u243_41
  2208  001176  EFBF  F008         	goto	i2u243_40
  2209  00117A                     i2u243_41:
  2210  00117A  EFC4  F008         	goto	i2l1228
  2211  00117E                     i2u243_40:
  2212  00117E                     
  2213                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
  2214  00117E  0E01               	movlw	1
  2215  001180  6E62               	movwf	_RB5_Flag^0,c	;volatile
  2216  001182                     
  2217                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
  2218  001182  0E01               	movlw	1
  2219  001184  EC70  F00D         	call	_RB5_ISR
  2220  001188                     i2l1228:
  2221                           
  2222                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2223  001188  A6F2               	btfss	242,3,c	;volatile
  2224  00118A  EFC9  F008         	goto	i2u244_41
  2225  00118E  EFCB  F008         	goto	i2u244_40
  2226  001192                     i2u244_41:
  2227  001192  EFE6  F008         	goto	i2l1230
  2228  001196                     i2u244_40:
  2229  001196  A0F2               	btfss	242,0,c	;volatile
  2230  001198  EFD0  F008         	goto	i2u245_41
  2231  00119C  EFD2  F008         	goto	i2u245_40
  2232  0011A0                     i2u245_41:
  2233  0011A0  EFE6  F008         	goto	i2l1230
  2234  0011A4                     i2u245_40:
  2235  0011A4  AC81               	btfss	129,6,c	;volatile
  2236  0011A6  EFD7  F008         	goto	i2u246_41
  2237  0011AA  EFD9  F008         	goto	i2u246_40
  2238  0011AE                     i2u246_41:
  2239  0011AE  EFE6  F008         	goto	i2l1230
  2240  0011B2                     i2u246_40:
  2241  0011B2  0461               	decf	_RB6_Flag^0,w,c	;volatile
  2242  0011B4  A4D8               	btfss	status,2,c
  2243  0011B6  EFDF  F008         	goto	i2u247_41
  2244  0011BA  EFE1  F008         	goto	i2u247_40
  2245  0011BE                     i2u247_41:
  2246  0011BE  EFE6  F008         	goto	i2l1230
  2247  0011C2                     i2u247_40:
  2248  0011C2                     
  2249                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
  2250  0011C2  0E00               	movlw	0
  2251  0011C4  6E61               	movwf	_RB6_Flag^0,c	;volatile
  2252  0011C6                     
  2253                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
  2254  0011C6  0E00               	movlw	0
  2255  0011C8  EC63  F00D         	call	_RB6_ISR
  2256  0011CC                     i2l1230:
  2257                           
  2258                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2259  0011CC  A6F2               	btfss	242,3,c	;volatile
  2260  0011CE  EFEB  F008         	goto	i2u248_41
  2261  0011D2  EFED  F008         	goto	i2u248_40
  2262  0011D6                     i2u248_41:
  2263  0011D6  EF08  F009         	goto	i2l1232
  2264  0011DA                     i2u248_40:
  2265  0011DA  A0F2               	btfss	242,0,c	;volatile
  2266  0011DC  EFF2  F008         	goto	i2u249_41
  2267  0011E0  EFF4  F008         	goto	i2u249_40
  2268  0011E4                     i2u249_41:
  2269  0011E4  EF08  F009         	goto	i2l1232
  2270  0011E8                     i2u249_40:
  2271  0011E8  BC81               	btfsc	129,6,c	;volatile
  2272  0011EA  EFF9  F008         	goto	i2u250_41
  2273  0011EE  EFFB  F008         	goto	i2u250_40
  2274  0011F2                     i2u250_41:
  2275  0011F2  EF08  F009         	goto	i2l1232
  2276  0011F6                     i2u250_40:
  2277  0011F6  5061               	movf	_RB6_Flag^0,w,c	;volatile
  2278  0011F8  A4D8               	btfss	status,2,c
  2279  0011FA  EF01  F009         	goto	i2u251_41
  2280  0011FE  EF03  F009         	goto	i2u251_40
  2281  001202                     i2u251_41:
  2282  001202  EF08  F009         	goto	i2l1232
  2283  001206                     i2u251_40:
  2284  001206                     
  2285                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
  2286  001206  0E01               	movlw	1
  2287  001208  6E61               	movwf	_RB6_Flag^0,c	;volatile
  2288  00120A                     
  2289                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
  2290  00120A  0E01               	movlw	1
  2291  00120C  EC63  F00D         	call	_RB6_ISR
  2292  001210                     i2l1232:
  2293                           
  2294                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2295  001210  A6F2               	btfss	242,3,c	;volatile
  2296  001212  EF0D  F009         	goto	i2u252_41
  2297  001216  EF0F  F009         	goto	i2u252_40
  2298  00121A                     i2u252_41:
  2299  00121A  EF2A  F009         	goto	i2l1234
  2300  00121E                     i2u252_40:
  2301  00121E  A0F2               	btfss	242,0,c	;volatile
  2302  001220  EF14  F009         	goto	i2u253_41
  2303  001224  EF16  F009         	goto	i2u253_40
  2304  001228                     i2u253_41:
  2305  001228  EF2A  F009         	goto	i2l1234
  2306  00122C                     i2u253_40:
  2307  00122C  AE81               	btfss	129,7,c	;volatile
  2308  00122E  EF1B  F009         	goto	i2u254_41
  2309  001232  EF1D  F009         	goto	i2u254_40
  2310  001236                     i2u254_41:
  2311  001236  EF2A  F009         	goto	i2l1234
  2312  00123A                     i2u254_40:
  2313  00123A  0460               	decf	_RB7_Flag^0,w,c	;volatile
  2314  00123C  A4D8               	btfss	status,2,c
  2315  00123E  EF23  F009         	goto	i2u255_41
  2316  001242  EF25  F009         	goto	i2u255_40
  2317  001246                     i2u255_41:
  2318  001246  EF2A  F009         	goto	i2l1234
  2319  00124A                     i2u255_40:
  2320  00124A                     
  2321                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
  2322  00124A  0E00               	movlw	0
  2323  00124C  6E60               	movwf	_RB7_Flag^0,c	;volatile
  2324  00124E                     
  2325                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
  2326  00124E  0E00               	movlw	0
  2327  001250  EC56  F00D         	call	_RB7_ISR
  2328  001254                     i2l1234:
  2329                           
  2330                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2331  001254  A6F2               	btfss	242,3,c	;volatile
  2332  001256  EF2F  F009         	goto	i2u256_41
  2333  00125A  EF31  F009         	goto	i2u256_40
  2334  00125E                     i2u256_41:
  2335  00125E  EF4C  F009         	goto	i2l1236
  2336  001262                     i2u256_40:
  2337  001262  A0F2               	btfss	242,0,c	;volatile
  2338  001264  EF36  F009         	goto	i2u257_41
  2339  001268  EF38  F009         	goto	i2u257_40
  2340  00126C                     i2u257_41:
  2341  00126C  EF4C  F009         	goto	i2l1236
  2342  001270                     i2u257_40:
  2343  001270  BE81               	btfsc	129,7,c	;volatile
  2344  001272  EF3D  F009         	goto	i2u258_41
  2345  001276  EF3F  F009         	goto	i2u258_40
  2346  00127A                     i2u258_41:
  2347  00127A  EF4C  F009         	goto	i2l1236
  2348  00127E                     i2u258_40:
  2349  00127E  5060               	movf	_RB7_Flag^0,w,c	;volatile
  2350  001280  A4D8               	btfss	status,2,c
  2351  001282  EF45  F009         	goto	i2u259_41
  2352  001286  EF47  F009         	goto	i2u259_40
  2353  00128A                     i2u259_41:
  2354  00128A  EF4C  F009         	goto	i2l1236
  2355  00128E                     i2u259_40:
  2356  00128E                     
  2357                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
  2358  00128E  0E01               	movlw	1
  2359  001290  6E60               	movwf	_RB7_Flag^0,c	;volatile
  2360  001292                     
  2361                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
  2362  001292  0E01               	movlw	1
  2363  001294  EC56  F00D         	call	_RB7_ISR
  2364  001298                     i2l1236:
  2365                           
  2366                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  2367  001298  AC9D               	btfss	157,6,c	;volatile
  2368  00129A  EF51  F009         	goto	i2u260_41
  2369  00129E  EF53  F009         	goto	i2u260_40
  2370  0012A2                     i2u260_41:
  2371  0012A2  EF5C  F009         	goto	i2l1238
  2372  0012A6                     i2u260_40:
  2373  0012A6  AC9E               	btfss	158,6,c	;volatile
  2374  0012A8  EF58  F009         	goto	i2u261_41
  2375  0012AC  EF5A  F009         	goto	i2u261_40
  2376  0012B0                     i2u261_41:
  2377  0012B0  EF5C  F009         	goto	i2l1238
  2378  0012B4                     i2u261_40:
  2379  0012B4                     
  2380                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
  2381  0012B4  ECB8  F00D         	call	_ADC_ISR	;wreg free
  2382  0012B8                     i2l1238:
  2383                           
  2384                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  2385  0012B8  AAF2               	btfss	242,5,c	;volatile
  2386  0012BA  EF61  F009         	goto	i2u262_41
  2387  0012BE  EF63  F009         	goto	i2u262_40
  2388  0012C2                     i2u262_41:
  2389  0012C2  EF6C  F009         	goto	i2l1240
  2390  0012C6                     i2u262_40:
  2391  0012C6  A4F2               	btfss	242,2,c	;volatile
  2392  0012C8  EF68  F009         	goto	i2u263_41
  2393  0012CC  EF6A  F009         	goto	i2u263_40
  2394  0012D0                     i2u263_41:
  2395  0012D0  EF6C  F009         	goto	i2l1240
  2396  0012D4                     i2u263_40:
  2397  0012D4                     
  2398                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
  2399  0012D4  EC96  F00D         	call	_TMR0_ISR	;wreg free
  2400  0012D8                     i2l1240:
  2401                           
  2402                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  2403  0012D8  A09D               	btfss	157,0,c	;volatile
  2404  0012DA  EF71  F009         	goto	i2u264_41
  2405  0012DE  EF73  F009         	goto	i2u264_40
  2406  0012E2                     i2u264_41:
  2407  0012E2  EF7C  F009         	goto	i2l1242
  2408  0012E6                     i2u264_40:
  2409  0012E6  A09E               	btfss	158,0,c	;volatile
  2410  0012E8  EF78  F009         	goto	i2u265_41
  2411  0012EC  EF7A  F009         	goto	i2u265_40
  2412  0012F0                     i2u265_41:
  2413  0012F0  EF7C  F009         	goto	i2l1242
  2414  0012F4                     i2u265_40:
  2415  0012F4                     
  2416                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
  2417  0012F4  EC90  F00D         	call	_TMR1_ISR	;wreg free
  2418  0012F8                     i2l1242:
  2419                           
  2420                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  2421  0012F8  A29D               	btfss	157,1,c	;volatile
  2422  0012FA  EF81  F009         	goto	i2u266_41
  2423  0012FE  EF83  F009         	goto	i2u266_40
  2424  001302                     i2u266_41:
  2425  001302  EF8C  F009         	goto	i2l1244
  2426  001306                     i2u266_40:
  2427  001306  A29E               	btfss	158,1,c	;volatile
  2428  001308  EF88  F009         	goto	i2u267_41
  2429  00130C  EF8A  F009         	goto	i2u267_40
  2430  001310                     i2u267_41:
  2431  001310  EF8C  F009         	goto	i2l1244
  2432  001314                     i2u267_40:
  2433  001314                     
  2434                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
  2435  001314  ECA1  F00D         	call	_TMR2_ISR	;wreg free
  2436  001318                     i2l1244:
  2437                           
  2438                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  2439  001318  A2A0               	btfss	160,1,c	;volatile
  2440  00131A  EF91  F009         	goto	i2u268_41
  2441  00131E  EF93  F009         	goto	i2u268_40
  2442  001322                     i2u268_41:
  2443  001322  EF9C  F009         	goto	i2l1246
  2444  001326                     i2u268_40:
  2445  001326  A2A1               	btfss	161,1,c	;volatile
  2446  001328  EF98  F009         	goto	i2u269_41
  2447  00132C  EF9A  F009         	goto	i2u269_40
  2448  001330                     i2u269_41:
  2449  001330  EF9C  F009         	goto	i2l1246
  2450  001334                     i2u269_40:
  2451  001334                     
  2452                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
  2453  001334  EC8A  F00D         	call	_TMR3_ISR	;wreg free
  2454  001338                     i2l1246:
  2455                           
  2456                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  2457  001338  A89D               	btfss	157,4,c	;volatile
  2458  00133A  EFA1  F009         	goto	i2u270_41
  2459  00133E  EFA3  F009         	goto	i2u270_40
  2460  001342                     i2u270_41:
  2461  001342  EFAC  F009         	goto	i2l1248
  2462  001346                     i2u270_40:
  2463  001346  A89E               	btfss	158,4,c	;volatile
  2464  001348  EFA8  F009         	goto	i2u271_41
  2465  00134C  EFAA  F009         	goto	i2u271_40
  2466  001350                     i2u271_41:
  2467  001350  EFAC  F009         	goto	i2l1248
  2468  001354                     i2u271_40:
  2469  001354                     
  2470                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
  2471  001354  ECB2  F00D         	call	_EUSART_TX_ISR	;wreg free
  2472  001358                     i2l1248:
  2473                           
  2474                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  2475  001358  AA9D               	btfss	157,5,c	;volatile
  2476  00135A  EFB1  F009         	goto	i2u272_41
  2477  00135E  EFB3  F009         	goto	i2u272_40
  2478  001362                     i2u272_41:
  2479  001362  EFBC  F009         	goto	i2l1250
  2480  001366                     i2u272_40:
  2481  001366  AA9E               	btfss	158,5,c	;volatile
  2482  001368  EFB8  F009         	goto	i2u273_41
  2483  00136C  EFBA  F009         	goto	i2u273_40
  2484  001370                     i2u273_41:
  2485  001370  EFBC  F009         	goto	i2l1250
  2486  001374                     i2u273_40:
  2487  001374                     
  2488                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
  2489  001374  ECBD  F00D         	call	_EUSART_RX_ISR	;wreg free
  2490  001378                     i2l1250:
  2491                           
  2492                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  2493  001378  A69D               	btfss	157,3,c	;volatile
  2494  00137A  EFC1  F009         	goto	i2u274_41
  2495  00137E  EFC3  F009         	goto	i2u274_40
  2496  001382                     i2u274_41:
  2497  001382  EFCC  F009         	goto	i2l1252
  2498  001386                     i2u274_40:
  2499  001386  A69E               	btfss	158,3,c	;volatile
  2500  001388  EFC8  F009         	goto	i2u275_41
  2501  00138C  EFCA  F009         	goto	i2u275_40
  2502  001390                     i2u275_41:
  2503  001390  EFCC  F009         	goto	i2l1252
  2504  001394                     i2u275_40:
  2505  001394                     
  2506                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
  2507  001394  ECA8  F00D         	call	_MSSP_I2C_ISR	;wreg free
  2508  001398                     i2l1252:
  2509                           
  2510                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  2511  001398  A6A0               	btfss	160,3,c	;volatile
  2512  00139A  EFD1  F009         	goto	i2u276_41
  2513  00139E  EFD3  F009         	goto	i2u276_40
  2514  0013A2                     i2u276_41:
  2515  0013A2  EFDC  F009         	goto	i2l1254
  2516  0013A6                     i2u276_40:
  2517  0013A6  A6A1               	btfss	161,3,c	;volatile
  2518  0013A8  EFD8  F009         	goto	i2u277_41
  2519  0013AC  EFDA  F009         	goto	i2u277_40
  2520  0013B0                     i2u277_41:
  2521  0013B0  EFDC  F009         	goto	i2l1254
  2522  0013B4                     i2u277_40:
  2523  0013B4                     
  2524                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
  2525  0013B4  ECAA  F00D         	call	_MSSP_I2C_BC_ISR	;wreg free
  2526  0013B8                     i2l1254:
  2527                           
  2528                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  2529  0013B8  A69D               	btfss	157,3,c	;volatile
  2530  0013BA  EFE1  F009         	goto	i2u278_41
  2531  0013BE  EFE3  F009         	goto	i2u278_40
  2532  0013C2                     i2u278_41:
  2533  0013C2  EFEC  F009         	goto	i2l1256
  2534  0013C6                     i2u278_40:
  2535  0013C6  A69E               	btfss	158,3,c	;volatile
  2536  0013C8  EFE8  F009         	goto	i2u279_41
  2537  0013CC  EFEA  F009         	goto	i2u279_40
  2538  0013D0                     i2u279_41:
  2539  0013D0  EFEC  F009         	goto	i2l1256
  2540  0013D4                     i2u279_40:
  2541  0013D4                     
  2542                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
  2543  0013D4  ECBC  F00D         	call	_MSSP_SPI_ISR	;wreg free
  2544  0013D8                     i2l1256:
  2545                           
  2546                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  2547  0013D8  A49D               	btfss	157,2,c	;volatile
  2548  0013DA  EFF1  F009         	goto	i2u280_41
  2549  0013DE  EFF3  F009         	goto	i2u280_40
  2550  0013E2                     i2u280_41:
  2551  0013E2  EFFC  F009         	goto	i2l1258
  2552  0013E6                     i2u280_40:
  2553  0013E6  A49E               	btfss	158,2,c	;volatile
  2554  0013E8  EFF8  F009         	goto	i2u281_41
  2555  0013EC  EFFA  F009         	goto	i2u281_40
  2556  0013F0                     i2u281_41:
  2557  0013F0  EFFC  F009         	goto	i2l1258
  2558  0013F4                     i2u281_40:
  2559  0013F4                     
  2560                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  2561  0013F4  ECB6  F00D         	call	_CCP1_ISR	;wreg free
  2562  0013F8                     i2l1258:
  2563                           
  2564                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  2565  0013F8  A0A0               	btfss	160,0,c	;volatile
  2566  0013FA  EF01  F00A         	goto	i2u282_41
  2567  0013FE  EF03  F00A         	goto	i2u282_40
  2568  001402                     i2u282_41:
  2569  001402  EF0C  F00A         	goto	i2l1261
  2570  001406                     i2u282_40:
  2571  001406  A0A1               	btfss	161,0,c	;volatile
  2572  001408  EF08  F00A         	goto	i2u283_41
  2573  00140C  EF0A  F00A         	goto	i2u283_40
  2574  001410                     i2u283_41:
  2575  001410  EF0C  F00A         	goto	i2l1261
  2576  001414                     i2u283_40:
  2577  001414                     
  2578                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
  2579  001414  ECB4  F00D         	call	_CCP2_ISR	;wreg free
  2580  001418                     i2l1261:
  2581  001418  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2582  00141A  0011               	retfie		f
  2583  00141C                     __end_of_InterruptManager:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _TMR3_ISR *****************
  2587 ;; Defined at:
  2588 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_InterruptManager
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text13
  2616  001B14                     __ptext13:
  2617                           	callstack 0
  2618  001B14                     _TMR3_ISR:
  2619                           	callstack 26
  2620  001B14                     
  2621                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  2622  001B14  92A1               	bcf	161,1,c	;volatile
  2623  001B16                     
  2624                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  2625  001B16  500A               	movf	(_timer3_preload+1)^0,w,c
  2626  001B18  6EB3               	movwf	179,c	;volatile
  2627  001B1A                     
  2628                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  2629  001B1A  C009  FFB2         	movff	_timer3_preload,4018	;volatile
  2630  001B1E  0012               	return		;funcret
  2631  001B20                     __end_of_TMR3_ISR:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _TMR2_ISR *****************
  2635 ;; Defined at:
  2636 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		None
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_InterruptManager
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text14
  2664  001B42                     __ptext14:
  2665                           	callstack 0
  2666  001B42                     _TMR2_ISR:
  2667                           	callstack 26
  2668  001B42                     
  2669                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  2670  001B42  929E               	bcf	158,1,c	;volatile
  2671                           
  2672                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  2673  001B44  C039  FFCC         	movff	_timer2_preload,4044	;volatile
  2674  001B48  0012               	return		;funcret
  2675  001B4A                     __end_of_TMR2_ISR:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _TMR1_ISR *****************
  2679 ;; Defined at:
  2680 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_InterruptManager
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text15
  2708  001B20                     __ptext15:
  2709                           	callstack 0
  2710  001B20                     _TMR1_ISR:
  2711                           	callstack 26
  2712  001B20                     
  2713                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
  2714  001B20  909E               	bcf	158,0,c	;volatile
  2715  001B22                     
  2716                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
  2717  001B22  5010               	movf	(_timer1_preload+1)^0,w,c	;volatile
  2718  001B24  6ECF               	movwf	207,c	;volatile
  2719  001B26                     
  2720                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
  2721  001B26  C00F  FFCE         	movff	_timer1_preload,4046	;volatile
  2722  001B2A  0012               	return		;funcret
  2723  001B2C                     __end_of_TMR1_ISR:
  2724                           	callstack 0
  2725                           
  2726 ;; *************** function _TMR0_ISR *****************
  2727 ;; Defined at:
  2728 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_InterruptManager
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text16
  2756  001B2C                     __ptext16:
  2757                           	callstack 0
  2758  001B2C                     _TMR0_ISR:
  2759                           	callstack 26
  2760  001B2C                     
  2761                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
  2762  001B2C  94F2               	bcf	242,2,c	;volatile
  2763  001B2E                     
  2764                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
  2765  001B2E  5014               	movf	(_timer0_preload+1)^0,w,c
  2766  001B30  6ED7               	movwf	215,c	;volatile
  2767  001B32                     
  2768                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
  2769  001B32  C013  FFD6         	movff	_timer0_preload,4054	;volatile
  2770  001B36  0012               	return		;funcret
  2771  001B38                     __end_of_TMR0_ISR:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _RB7_ISR *****************
  2775 ;; Defined at:
  2776 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  RB7_Source      1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_InterruptManager
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text17
  2804  001AAC                     __ptext17:
  2805                           	callstack 0
  2806  001AAC                     _RB7_ISR:
  2807                           	callstack 26
  2808                           
  2809                           ;incstack = 0
  2810                           ;RB7_ISR@RB7_Source stored from wreg
  2811  001AAC  6E64               	movwf	RB7_ISR@RB7_Source^0,c
  2812  001AAE                     
  2813                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  2814  001AAE  90F2               	bcf	242,0,c	;volatile
  2815  001AB0                     
  2816                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  2817  001AB0  5064               	movf	RB7_ISR@RB7_Source^0,w,c
  2818  001AB2  A4D8               	btfss	status,2,c
  2819  001AB4  EF5E  F00D         	goto	i2u39_41
  2820  001AB8  EF60  F00D         	goto	i2u39_40
  2821  001ABC                     i2u39_41:
  2822  001ABC  EF62  F00D         	goto	i2l2822
  2823  001AC0                     i2u39_40:
  2824  001AC0  EF62  F00D         	goto	i2l1041
  2825  001AC4                     i2l2822:
  2826  001AC4                     i2l1041:
  2827  001AC4  0012               	return		;funcret
  2828  001AC6                     __end_of_RB7_ISR:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _RB6_ISR *****************
  2832 ;; Defined at:
  2833 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  RB6_Source      1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_InterruptManager
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text18
  2861  001AC6                     __ptext18:
  2862                           	callstack 0
  2863  001AC6                     _RB6_ISR:
  2864                           	callstack 26
  2865                           
  2866                           ;incstack = 0
  2867                           ;RB6_ISR@RB6_Source stored from wreg
  2868  001AC6  6E64               	movwf	RB6_ISR@RB6_Source^0,c
  2869  001AC8                     
  2870                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  2871  001AC8  90F2               	bcf	242,0,c	;volatile
  2872  001ACA                     
  2873                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  2874  001ACA  5064               	movf	RB6_ISR@RB6_Source^0,w,c
  2875  001ACC  A4D8               	btfss	status,2,c
  2876  001ACE  EF6B  F00D         	goto	i2u38_41
  2877  001AD2  EF6D  F00D         	goto	i2u38_40
  2878  001AD6                     i2u38_41:
  2879  001AD6  EF6F  F00D         	goto	i2l2808
  2880  001ADA                     i2u38_40:
  2881  001ADA  EF6F  F00D         	goto	i2l1030
  2882  001ADE                     i2l2808:
  2883  001ADE                     i2l1030:
  2884  001ADE  0012               	return		;funcret
  2885  001AE0                     __end_of_RB6_ISR:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _RB5_ISR *****************
  2889 ;; Defined at:
  2890 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  RB5_Source      1    wreg     unsigned char 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_InterruptManager
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           	psect	text19
  2918  001AE0                     __ptext19:
  2919                           	callstack 0
  2920  001AE0                     _RB5_ISR:
  2921                           	callstack 26
  2922                           
  2923                           ;incstack = 0
  2924                           ;RB5_ISR@RB5_Source stored from wreg
  2925  001AE0  6E64               	movwf	RB5_ISR@RB5_Source^0,c
  2926  001AE2                     
  2927                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  2928  001AE2  90F2               	bcf	242,0,c	;volatile
  2929  001AE4                     
  2930                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  2931  001AE4  5064               	movf	RB5_ISR@RB5_Source^0,w,c
  2932  001AE6  A4D8               	btfss	status,2,c
  2933  001AE8  EF78  F00D         	goto	i2u37_41
  2934  001AEC  EF7A  F00D         	goto	i2u37_40
  2935  001AF0                     i2u37_41:
  2936  001AF0  EF7C  F00D         	goto	i2l2794
  2937  001AF4                     i2u37_40:
  2938  001AF4  EF7C  F00D         	goto	i2l1019
  2939  001AF8                     i2l2794:
  2940  001AF8                     i2l1019:
  2941  001AF8  0012               	return		;funcret
  2942  001AFA                     __end_of_RB5_ISR:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _RB4_ISR *****************
  2946 ;; Defined at:
  2947 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  RB4_Source      1    wreg     unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;Total ram usage:        1 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_InterruptManager
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text20
  2975  001AFA                     __ptext20:
  2976                           	callstack 0
  2977  001AFA                     _RB4_ISR:
  2978                           	callstack 26
  2979                           
  2980                           ;incstack = 0
  2981                           ;RB4_ISR@RB4_Source stored from wreg
  2982  001AFA  6E64               	movwf	RB4_ISR@RB4_Source^0,c
  2983  001AFC                     
  2984                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  2985  001AFC  90F2               	bcf	242,0,c	;volatile
  2986  001AFE                     
  2987                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  2988  001AFE  5064               	movf	RB4_ISR@RB4_Source^0,w,c
  2989  001B00  A4D8               	btfss	status,2,c
  2990  001B02  EF85  F00D         	goto	i2u36_41
  2991  001B06  EF87  F00D         	goto	i2u36_40
  2992  001B0A                     i2u36_41:
  2993  001B0A  EF89  F00D         	goto	i2l2780
  2994  001B0E                     i2u36_40:
  2995  001B0E  EF89  F00D         	goto	i2l1008
  2996  001B12                     i2l2780:
  2997  001B12                     i2l1008:
  2998  001B12  0012               	return		;funcret
  2999  001B14                     __end_of_RB4_ISR:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _MSSP_SPI_ISR *****************
  3003 ;; Defined at:
  3004 ;;		line 105 in file "MCAL_Layer/SPI/hal_spi.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		None
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_InterruptManager
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text21
  3032  001B78                     __ptext21:
  3033                           	callstack 0
  3034  001B78                     _MSSP_SPI_ISR:
  3035                           	callstack 26
  3036  001B78  0012               	return		;funcret
  3037  001B7A                     __end_of_MSSP_SPI_ISR:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _MSSP_I2C_ISR *****************
  3041 ;; Defined at:
  3042 ;;		line 242 in file "MCAL_Layer/I2C/hal_i2c.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		None
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_InterruptManager
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text22
  3070  001B50                     __ptext22:
  3071                           	callstack 0
  3072  001B50                     _MSSP_I2C_ISR:
  3073                           	callstack 26
  3074  001B50                     
  3075                           ;MCAL_Layer/I2C/hal_i2c.c: 244:     (PIR1bits.SSPIF = 0);
  3076  001B50  969E               	bcf	158,3,c	;volatile
  3077  001B52  0012               	return		;funcret
  3078  001B54                     __end_of_MSSP_I2C_ISR:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _MSSP_I2C_BC_ISR *****************
  3082 ;; Defined at:
  3083 ;;		line 251 in file "MCAL_Layer/I2C/hal_i2c.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		None
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        0 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_InterruptManager
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text23
  3111  001B54                     __ptext23:
  3112                           	callstack 0
  3113  001B54                     _MSSP_I2C_BC_ISR:
  3114                           	callstack 26
  3115  001B54                     
  3116                           ;MCAL_Layer/I2C/hal_i2c.c: 253:     (PIR2bits.BCLIF = 0);
  3117  001B54  96A1               	bcf	161,3,c	;volatile
  3118  001B56  0012               	return		;funcret
  3119  001B58                     __end_of_MSSP_I2C_BC_ISR:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _INT2_ISR *****************
  3123 ;; Defined at:
  3124 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		None
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_InterruptManager
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text24
  3152  001B58                     __ptext24:
  3153                           	callstack 0
  3154  001B58                     _INT2_ISR:
  3155                           	callstack 26
  3156  001B58                     
  3157                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  3158  001B58  92F0               	bcf	240,1,c	;volatile
  3159  001B5A  0012               	return		;funcret
  3160  001B5C                     __end_of_INT2_ISR:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _INT1_ISR *****************
  3164 ;; Defined at:
  3165 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		None
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_InterruptManager
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text25
  3193  001B5C                     __ptext25:
  3194                           	callstack 0
  3195  001B5C                     _INT1_ISR:
  3196                           	callstack 26
  3197  001B5C                     
  3198                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  3199  001B5C  90F0               	bcf	240,0,c	;volatile
  3200  001B5E  0012               	return		;funcret
  3201  001B60                     __end_of_INT1_ISR:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _INT0_ISR *****************
  3205 ;; Defined at:
  3206 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		None
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_InterruptManager
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text26
  3234  001B60                     __ptext26:
  3235                           	callstack 0
  3236  001B60                     _INT0_ISR:
  3237                           	callstack 26
  3238  001B60                     
  3239                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  3240  001B60  92F2               	bcf	242,1,c	;volatile
  3241  001B62  0012               	return		;funcret
  3242  001B64                     __end_of_INT0_ISR:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _EUSART_TX_ISR *****************
  3246 ;; Defined at:
  3247 ;;		line 243 in file "MCAL_Layer/usart/hal_usart.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		None
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        0 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_InterruptManager
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text27
  3275  001B64                     __ptext27:
  3276                           	callstack 0
  3277  001B64                     _EUSART_TX_ISR:
  3278                           	callstack 26
  3279  001B64                     
  3280                           ;MCAL_Layer/usart/hal_usart.c: 244:     (PIE1bits.TXIE = 0);
  3281  001B64  989D               	bcf	157,4,c	;volatile
  3282  001B66  0012               	return		;funcret
  3283  001B68                     __end_of_EUSART_TX_ISR:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _EUSART_RX_ISR *****************
  3287 ;; Defined at:
  3288 ;;		line 250 in file "MCAL_Layer/usart/hal_usart.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_InterruptManager
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text28
  3316  001B7A                     __ptext28:
  3317                           	callstack 0
  3318  001B7A                     _EUSART_RX_ISR:
  3319                           	callstack 26
  3320  001B7A  0012               	return		;funcret
  3321  001B7C                     __end_of_EUSART_RX_ISR:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _CCP2_ISR *****************
  3325 ;; Defined at:
  3326 ;;		line 260 in file "MCAL_Layer/CCP/hal_ccp.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		None
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_InterruptManager
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text29
  3354  001B68                     __ptext29:
  3355                           	callstack 0
  3356  001B68                     _CCP2_ISR:
  3357                           	callstack 26
  3358  001B68                     
  3359                           ;MCAL_Layer/CCP/hal_ccp.c: 261:     (PIR2bits.CCP2IF = 0);
  3360  001B68  90A1               	bcf	161,0,c	;volatile
  3361  001B6A  0012               	return		;funcret
  3362  001B6C                     __end_of_CCP2_ISR:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _CCP1_ISR *****************
  3366 ;; Defined at:
  3367 ;;		line 252 in file "MCAL_Layer/CCP/hal_ccp.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		None
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_InterruptManager
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text30
  3395  001B6C                     __ptext30:
  3396                           	callstack 0
  3397  001B6C                     _CCP1_ISR:
  3398                           	callstack 26
  3399  001B6C                     
  3400                           ;MCAL_Layer/CCP/hal_ccp.c: 253:     (PIR1bits.CCP1IF = 0);
  3401  001B6C  949E               	bcf	158,2,c	;volatile
  3402  001B6E  0012               	return		;funcret
  3403  001B70                     __end_of_CCP1_ISR:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _ADC_ISR *****************
  3407 ;; Defined at:
  3408 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_InterruptManager
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text31
  3436  001B70                     __ptext31:
  3437                           	callstack 0
  3438  001B70                     _ADC_ISR:
  3439                           	callstack 26
  3440  001B70                     
  3441                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
  3442  001B70  9C9E               	bcf	158,6,c	;volatile
  3443  001B72  0012               	return		;funcret
  3444  001B74                     __end_of_ADC_ISR:
  3445                           	callstack 0
  3446                           
  3447                           	psect	rparam
  3448  0000                     
  3449                           	psect	temp
  3450  00007A                     btemp:
  3451                           	callstack 0
  3452  00007A                     	ds	1
  3453  0000                     int$flags	set	btemp
  3454  0000                     wtemp8	set	btemp+1
  3455  0000                     ttemp5	set	btemp+1
  3456  0000                     ttemp6	set	btemp+4
  3457  0000                     ttemp7	set	btemp+8
  3458                           
  3459                           	psect	idloc
  3460                           
  3461                           ;Config register IDLOC0 @ 0x200000
  3462                           ;	unspecified, using default values
  3463  200000                     	org	2097152
  3464  200000  FF                 	db	255
  3465                           
  3466                           ;Config register IDLOC1 @ 0x200001
  3467                           ;	unspecified, using default values
  3468  200001                     	org	2097153
  3469  200001  FF                 	db	255
  3470                           
  3471                           ;Config register IDLOC2 @ 0x200002
  3472                           ;	unspecified, using default values
  3473  200002                     	org	2097154
  3474  200002  FF                 	db	255
  3475                           
  3476                           ;Config register IDLOC3 @ 0x200003
  3477                           ;	unspecified, using default values
  3478  200003                     	org	2097155
  3479  200003  FF                 	db	255
  3480                           
  3481                           ;Config register IDLOC4 @ 0x200004
  3482                           ;	unspecified, using default values
  3483  200004                     	org	2097156
  3484  200004  FF                 	db	255
  3485                           
  3486                           ;Config register IDLOC5 @ 0x200005
  3487                           ;	unspecified, using default values
  3488  200005                     	org	2097157
  3489  200005  FF                 	db	255
  3490                           
  3491                           ;Config register IDLOC6 @ 0x200006
  3492                           ;	unspecified, using default values
  3493  200006                     	org	2097158
  3494  200006  FF                 	db	255
  3495                           
  3496                           ;Config register IDLOC7 @ 0x200007
  3497                           ;	unspecified, using default values
  3498  200007                     	org	2097159
  3499  200007  FF                 	db	255
  3500                           
  3501                           	psect	config
  3502                           
  3503                           ; Padding undefined space
  3504  300000                     	org	3145728
  3505  300000  FF                 	db	255
  3506                           
  3507                           ;Config register CONFIG1H @ 0x300001
  3508                           ;	Oscillator Selection bits
  3509                           ;	OSC = HS, HS oscillator
  3510                           ;	Fail-Safe Clock Monitor Enable bit
  3511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3512                           ;	Internal/External Oscillator Switchover bit
  3513                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3514  300001                     	org	3145729
  3515  300001  02                 	db	2
  3516                           
  3517                           ;Config register CONFIG2L @ 0x300002
  3518                           ;	Power-up Timer Enable bit
  3519                           ;	PWRT = OFF, PWRT disabled
  3520                           ;	Brown-out Reset Enable bits
  3521                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3522                           ;	Brown Out Reset Voltage bits
  3523                           ;	BORV = 1, 
  3524  300002                     	org	3145730
  3525  300002  09                 	db	9
  3526                           
  3527                           ;Config register CONFIG2H @ 0x300003
  3528                           ;	Watchdog Timer Enable bit
  3529                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3530                           ;	Watchdog Timer Postscale Select bits
  3531                           ;	WDTPS = 512, 1:512
  3532  300003                     	org	3145731
  3533  300003  12                 	db	18
  3534                           
  3535                           ; Padding undefined space
  3536  300004                     	org	3145732
  3537  300004  FF                 	db	255
  3538                           
  3539                           ;Config register CONFIG3H @ 0x300005
  3540                           ;	CCP2 MUX bit
  3541                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3542                           ;	PORTB A/D Enable bit
  3543                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3544                           ;	Low-Power Timer1 Oscillator Enable bit
  3545                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3546                           ;	MCLR Pin Enable bit
  3547                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3548  300005                     	org	3145733
  3549  300005  81                 	db	129
  3550                           
  3551                           ;Config register CONFIG4L @ 0x300006
  3552                           ;	Stack Full/Underflow Reset Enable bit
  3553                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3554                           ;	Single-Supply ICSP Enable bit
  3555                           ;	LVP = OFF, Single-Supply ICSP disabled
  3556                           ;	Extended Instruction Set Enable bit
  3557                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3558                           ;	Background Debugger Enable bit
  3559                           ;	DEBUG = 0x1, unprogrammed default
  3560  300006                     	org	3145734
  3561  300006  81                 	db	129
  3562                           
  3563                           ; Padding undefined space
  3564  300007                     	org	3145735
  3565  300007  FF                 	db	255
  3566                           
  3567                           ;Config register CONFIG5L @ 0x300008
  3568                           ;	Code Protection bit
  3569                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3570                           ;	Code Protection bit
  3571                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3572                           ;	Code Protection bit
  3573                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3574                           ;	Code Protection bit
  3575                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3576  300008                     	org	3145736
  3577  300008  0F                 	db	15
  3578                           
  3579                           ;Config register CONFIG5H @ 0x300009
  3580                           ;	Boot Block Code Protection bit
  3581                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3582                           ;	Data EEPROM Code Protection bit
  3583                           ;	CPD = OFF, Data EEPROM not code-protected
  3584  300009                     	org	3145737
  3585  300009  C0                 	db	192
  3586                           
  3587                           ;Config register CONFIG6L @ 0x30000A
  3588                           ;	Write Protection bit
  3589                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3590                           ;	Write Protection bit
  3591                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3592                           ;	Write Protection bit
  3593                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3594                           ;	Write Protection bit
  3595                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3596  30000A                     	org	3145738
  3597  30000A  0F                 	db	15
  3598                           
  3599                           ;Config register CONFIG6H @ 0x30000B
  3600                           ;	Configuration Register Write Protection bit
  3601                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3602                           ;	Boot Block Write Protection bit
  3603                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3604                           ;	Data EEPROM Write Protection bit
  3605                           ;	WRTD = OFF, Data EEPROM not write-protected
  3606  30000B                     	org	3145739
  3607  30000B  E0                 	db	224
  3608                           
  3609                           ;Config register CONFIG7L @ 0x30000C
  3610                           ;	Table Read Protection bit
  3611                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3612                           ;	Table Read Protection bit
  3613                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3614                           ;	Table Read Protection bit
  3615                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3616                           ;	Table Read Protection bit
  3617                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3618  30000C                     	org	3145740
  3619  30000C  0F                 	db	15
  3620                           
  3621                           ;Config register CONFIG7H @ 0x30000D
  3622                           ;	Boot Block Table Read Protection bit
  3623                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3624  30000D                     	org	3145741
  3625  30000D  40                 	db	64
  3626                           tosu	equ	0xFFF
  3627                           tosh	equ	0xFFE
  3628                           tosl	equ	0xFFD
  3629                           stkptr	equ	0xFFC
  3630                           pclatu	equ	0xFFB
  3631                           pclath	equ	0xFFA
  3632                           pcl	equ	0xFF9
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           prodh	equ	0xFF4
  3638                           prodl	equ	0xFF3
  3639                           indf0	equ	0xFEF
  3640                           postinc0	equ	0xFEE
  3641                           postdec0	equ	0xFED
  3642                           preinc0	equ	0xFEC
  3643                           plusw0	equ	0xFEB
  3644                           fsr0h	equ	0xFEA
  3645                           fsr0l	equ	0xFE9
  3646                           wreg	equ	0xFE8
  3647                           indf1	equ	0xFE7
  3648                           postinc1	equ	0xFE6
  3649                           postdec1	equ	0xFE5
  3650                           preinc1	equ	0xFE4
  3651                           plusw1	equ	0xFE3
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           bsr	equ	0xFE0
  3655                           indf2	equ	0xFDF
  3656                           postinc2	equ	0xFDE
  3657                           postdec2	equ	0xFDD
  3658                           preinc2	equ	0xFDC
  3659                           plusw2	equ	0xFDB
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        41
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     22     121
    BANK0           128      0      16
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    MSSP_SPI_Interrupt_Init@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    S4844_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), 

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    SPI_Read_Byte@_data	PTR unsigned char  size(2) Largest target is 1
		 -> SPI_Msater_Side_Slave1_RetVal(COMRAM[1]), 

    SPI_Read_Byte@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    SPI_Send_Byte@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    SPI_Init@Config	PTR const struct . size(2) Largest target is 2
		 -> SPI_Obj(COMRAM[2]), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3646$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3646$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3646$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3646$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3452$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3323$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3133$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2968$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2356$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1835$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    gpio_pin_intialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> SPI_SS1(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> SPI_SS1(COMRAM[1]), relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 1
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), 
		 -> MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI(COMRAM[1]), MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO(COMRAM[1]), SPI_SS1(COMRAM[1]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), TRISE(SFR[1]), 
		 -> TRISA(SFR[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    CCP_PWM_Stop@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S706$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_SPI_Init
    _gpio_pin_intialize->_gpio_pin_write_logic
    _SPI_Init->_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
    _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations->_gpio_pin_direction_intialize
    _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations->_gpio_pin_direction_intialize

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17496
                                             20 COMRAM     2     2      0
                           _SPI_Init
                      _SPI_Read_Byte
                      _SPI_Send_Byte
              _application_intialize
                 _gpio_pin_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_pin_intialize                                   4     2      2    8170
                                             11 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_pin_write_logic                                10     7      3    5499
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Send_Byte                                        4     1      3     372
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _SPI_Read_Byte                                        5     1      4     394
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     2      2    3052
                                             17 COMRAM     3     1      2
            _MSSP_SPI_Interrupt_Init
_MSSP_SPI_Msster_Mode_GPIO_PIN_Confi
_MSSP_SPI_Slave_Mode_GPIO_PIN_Config
 ---------------------------------------------------------------------------------
 (2) _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations          8     6      2    1310
                                             10 COMRAM     7     5      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (2) _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations         6     4      2    1258
                                             10 COMRAM     5     3      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialize                         9     7      2    1091
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _MSSP_SPI_Interrupt_Init                              2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
     _MSSP_SPI_Interrupt_Init
     _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations
       _gpio_pin_direction_intialize
     _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
       _gpio_pin_direction_intialize
   _SPI_Read_Byte
   _SPI_Send_Byte
   _application_intialize
     _ecu_layer_intialize
   _gpio_pin_intialize
     _gpio_pin_direction_intialize
     _gpio_pin_write_logic
   _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      10       5       12.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     16      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      34        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 20 15:22:01 2021

                                   ??_InterruptManager 0065  
                      __end_of_MSSP_SPI_Interrupt_Init 1B78  
                                          _SSPSTATbits 000FC7  
                                        _SPI_Send_Byte 1A5E  
                                                  l347 1B74  
                                                  l714 16B4  
                                                  l733 17E0  
                                                  l754 1924  
                                                  _PR2 000FCB  
                                  SPI_Read_Byte@Config 0065  
                            _RB5_InterruptHandler_HIGH 0021  
                                      __end_of_ADC_ISR 1B74  
                                  led_initialize@F3004 0040  
                                                  prod 000FF3  
                                                  wreg 000FE8  
                                relay_initialize@F2998 003C  
                                      __end_of_RB4_ISR 1B14  
                                      __end_of_RB5_ISR 1AFA  
                                      __end_of_RB6_ISR 1AE0  
                                      __end_of_RB7_ISR 1AC6  
                                                 l1704 1B76  
                                                 l1713 1A5C  
                                                 l1641 1B4E  
                                                 l1660 1432  
                                                 l1725 19E4  
                                                 l5110 15AA  
                                                 l5112 15B2  
                                                 l5120 16B2  
                                                 l5104 1572  
                                                 l2536 1B74  
                                                 l1681 1A86  
                                                 l5114 1614  
                                                 l5106 1576  
                                                 l1682 1A8A  
                                                 l5130 16BA  
                                                 l5108 1588  
                                                 l1692 1A2A  
                                                 l5132 16CC  
                                                 l1669 1570  
                                                 l1677 1A74  
                                                 l5118 1670  
                                                 l5230 1A38  
                                                 l5222 1A2C  
                                                 l5142 17B4  
                                                 l5134 16EE  
                                                 l1679 1A78  
                                                 l5232 1A44  
                                                 l5224 1A2C  
                                                 l5240 198E  
                                                 l5400 19F8  
                                                 l5136 16F6  
                                                 l5144 17DE  
                                                 l5128 16B6  
                                                 l1689 1A0E  
                                                 l5234 1A50  
                                                 l5226 1A30  
                                                 l5250 19B2  
                                                 l5242 1992  
                                                 l5402 1A0A  
                                                 l5138 1758  
                                                 l6130 17E2  
                                                 l5228 1A34  
                                                 l5252 19BE  
                                                 l5244 1996  
                                                 l5236 198A  
                                                 l5404 1A1C  
                                                 l2924 1B4A  
                                                 l5260 18CC  
                                                 l6140 17F6  
                                                 l6132 17E6  
                                                 l5254 19D8  
                                                 l5246 199A  
                                                 l5238 198A  
                                                 l5350 141C  
                                                 l5406 1A28  
                                                 l2926 1B4A  
                                                 l5262 18EE  
                                                 l6150 1812  
                                                 l6142 1802  
                                                 l6134 17EA  
                                                 l5248 19A6  
                                                 l5360 147A  
                                                 l5352 142E  
                                                 l5264 18F6  
                                                 l5256 18BA  
                                                 l6160 1868  
                                                 l6152 181E  
                                                 l6144 180A  
                                                 l6136 17EE  
                                                 l6128 17E2  
                                                 l5370 14F2  
                                                 l5362 1494  
                                                 l5354 1434  
                                                 l5266 1922  
                                                 l5258 18BA  
                                                 l6162 1878  
                                                 l6154 182E  
                                                 l6146 180E  
                                                 l6138 17F2  
                                                 l5380 156C  
                                                 l5372 14FE  
                                                 l5364 14AE  
                                                 l5356 144A  
                                                 l5348 141C  
                                                 l6164 188C  
                                                 l6156 183E  
                                                 l6148 1810  
                                                 l5374 151C  
                                                 l5366 14BE  
                                                 l5358 1462  
                                                 l5382 156E  
                                                 l5390 1A70  
                                                 l6166 18A2  
                                                 l6158 1852  
                                                 l5376 153E  
                                                 l5368 14D8  
                                                 l5392 1A88  
                                                 l6176 17C8  
                                                 l6178 169C  
                                                 l5378 1560  
                                                 l5386 1A5E  
                                                 l5396 19E6  
                                                 l5388 1A5E  
                                                 l5398 19E6  
                                                 STR_1 1011  
                                                 _LATA 000F89  
                                                 _LATB 000F8A  
                                                 _LATC 000F8B  
                                                 _LATD 000F8C  
                                                 _LATE 000F8D  
                                                 u3400 168A  
                                                 u3410 16CC  
                                                 u3411 16C8  
                                                 u3420 16EE  
                                                 u3500 18CC  
                                                 u3421 16EA  
                                                 u3501 18C8  
                                                 u3350 1588  
                                                 u3510 18EE  
                                                 u3351 1584  
                                                 u3511 18EA  
                                                 u3360 15AA  
                                                 u3600 142E  
                                                 u3361 15A6  
                                                 u3601 142A  
                                                 u3610 1462  
                                                 u3434 1716  
                                                 u3611 145E  
                                                 u3435 1712  
                                                 u3620 147A  
                                                 u3700 1A0A  
                                                 u3444 1778  
                                                 u3621 1476  
                                                 u3701 1A06  
                                                 u3445 1774  
                                                 u3390 1688  
                                                 u3374 15D2  
                                                 u3630 1494  
                                                 u3710 1A1C  
                                                 u3391 1682  
                                                 u3375 15CE  
                                                 u3631 1490  
                                                 u3711 1A18  
                                                 u3384 1634  
                                                 u3640 14AE  
                                                 u3385 1630  
                                                 u3641 14AA  
                                                 u3490 19D8  
                                                 u3650 14D8  
                                                 u3491 19D4  
                                                 u3651 14D4  
                                                 u3660 14F2  
                                                 u3661 14EE  
                                                 u3670 1A70  
                                                 u3671 1A6C  
                                                 u3680 1A86  
                                                 u3681 1A82  
                                                 u4457 185C  
                                                 u3690 19F8  
                                                 u3691 19F4  
                                                 u4467 1896  
                                                 _TMR2 000FCC  
                              ??_application_intialize 0065  
                             _RB4_InterruptHandler_LOW 0023  
                                                 _main 17E2  
                                     __end_of_CCP1_ISR 1B70  
                                     __end_of_CCP2_ISR 1B6C  
                             _RB7_InterruptHandler_LOW 0017  
                                                 fsr2h 000FDA  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                                 btemp 007A  
                                                 prodl 000FF3  
                                                 start 000E  
                                       ?_SPI_Read_Byte 0065  
                                         ___param_bank 000000  
                                 _gpio_pin_write_logic 16B6  
                                       ?_SPI_Send_Byte 0065  
                                     __end_of_INT0_ISR 1B64  
                                     __end_of_INT1_ISR 1B60  
                                     __end_of_INT2_ISR 1B5C  
                                        _EUSART_RX_ISR 1B7A  
                                        _EUSART_TX_ISR 1B64  
                                                ?_main 0064  
                                                _EEADR 000FA9  
                                                i2l473 1B72  
                                                i2l574 1B6A  
                                                i2l569 1B6E  
                                                i2l923 1B56  
                                                i2l919 1B52  
                          __size_of_gpio_pin_intialize 006C  
                                                i2l992 1B5E  
                                                i2l987 1B62  
                                                i2l997 1B5A  
                                                _RCREG 000FAE  
                                  relay_turn_off@F3008 003A  
                                                _TMR0H 000FD7  
                                                _TMR1H 000FCF  
                                                _TMR0L 000FD6  
                                                _TMR1L 000FCE  
                                                _TMR3H 000FB3  
                                                _TMR3L 000FB2  
                                                _SPBRG 000FAF  
                                                _PORTA 000F80  
                                                _PORTB 000F81  
                                                _PORTC 000F82  
                                                _PORTD 000F83  
                                                _PORTE 000F84  
                                                _TRISA 000F92  
                                                _TRISB 000F93  
                                                _TRISC 000F94  
                                                _TRISD 000F95  
                                                _TRISE 000F96  
                                                _TXREG 000FAD  
                                     __end_of_TMR0_ISR 1B38  
                                     __end_of_TMR1_ISR 1B2C  
                                     __end_of_TMR2_ISR 1B4A  
                                     __end_of_TMR3_ISR 1B20  
                                     __end_of_SPI_Init 1572  
                                                tablat 000FF5  
                                                ttemp5 007B  
                                                ttemp6 007E  
                                                ttemp7 0082  
                                                status 000FD8  
                                                wtemp8 007B  
                                      __initialization 1926  
                                         __end_of_main 18BA  
                                ?_gpio_pin_write_logic 0065  
                                            ??_ADC_ISR 0064  
                                       ?_EUSART_RX_ISR 0064  
                                       ?_EUSART_TX_ISR 0064  
                                        _lat_registers 0045  
                                               ??_main 0078  
                                        __activetblptr 000003  
                                _TMR3_InterruptHandler 000B  
                                     led_turn_on@F3009 003F  
                                            ??_RB4_ISR 0064  
                                            ??_RB5_ISR 0064  
                                            ??_RB6_ISR 0064  
                                            ??_RB7_ISR 0064  
                         __size_of_ecu_layer_intialize 0002  
                           _EUSART_OverrunErrorHandler 0001  
                                               _ADRESH 000FC4  
                                               _EEADRH 000FAA  
                                               _ADRESL 000FC3  
                                               _EEDATA 000FA8  
                                               _CCPR1L 000FBE  
                                               _CCPR2L 000FBB  
                                               _EECON2 000FA7  
                                               i2l1030 1ADE  
                                               i2l1008 1B12  
                                               i2l1041 1AC4  
                                               i2l1019 1AF8  
                                               i2l1220 1078  
                                               i2l1230 11CC  
                                               i2l1222 10BC  
                                               i2l1303 1B36  
                                               i2l1240 12D8  
                                               i2l1232 1210  
                                               i2l1224 1100  
                                               i2l1216 1038  
                                               i2l1250 1378  
                                               i2l1242 12F8  
                                               i2l1234 1254  
                                               i2l1226 1144  
                                               i2l1218 1058  
                                               i2l1252 1398  
                                               i2l1244 1318  
                                               i2l1236 1298  
                                               i2l1228 1188  
                                               i2l1261 1418  
                                               i2l1254 13B8  
                                               i2l1246 1338  
                                               i2l1238 12B8  
                                               i2l1423 1B48  
                                               i2l1256 13D8  
                                               i2l1248 1358  
                                               i2l1258 13F8  
                                               i2l1372 1B2A  
                                               i2l1701 1B78  
                                               i2l1608 1B7A  
                                               i2l1467 1B1E  
                     __size_of_MSSP_SPI_Interrupt_Init 0002  
                                               i2l2800 1AC8  
                                               i2l2722 1B6C  
                                               i2l2802 1ACA  
                                               i2l4500 10F6  
                                               i2l2718 1B70  
                                               i2l2750 1B54  
                                               i2l2822 1AC4  
                                               i2l2814 1AAE  
                                               i2l4510 113A  
                                               i2l4502 10FA  
                                               i2l1599 1B66  
                                               i2l2728 1B68  
                                               i2l2904 1B7A  
                                               i2l2760 1B5C  
                                               i2l2808 1ADE  
                                               i2l2816 1AB0  
                                               i2l4600 13C6  
                                               i2l4520 117E  
                                               i2l4512 113E  
                                               i2l4504 110E  
                                               i2l2754 1B60  
                                               i2l2746 1B50  
                                               i2l4610 1414  
                                               i2l4602 13D4  
                                               i2l4530 11C2  
                                               i2l4522 1182  
                                               i2l4514 1152  
                                               i2l4506 111C  
                                               i2l2780 1B12  
                                               i2l2772 1AFC  
                                               i2l4604 13E6  
                                               i2l4540 1206  
                                               i2l4532 11C6  
                                               i2l4524 1196  
                                               i2l4516 1160  
                                               i2l4508 112A  
                                               i2l2766 1B58  
                                               i2l2774 1AFE  
                                               i2l2870 1B2C  
                                               i2l4606 13F4  
                                               i2l4550 124A  
                                               i2l4542 120A  
                                               i2l4534 11DA  
                                               i2l4526 11A4  
                                               i2l4518 116E  
                                               i2l4470 1018  
                                               i2l2872 1B2E  
                                               i2l2880 1B22  
                                               i2l4608 1406  
                                               i2l4560 128E  
                                               i2l4552 124E  
                                               i2l4544 121E  
                                               i2l4536 11E8  
                                               i2l4528 11B2  
                                               i2l4480 1066  
                                               i2l4472 1026  
                                               i2l2794 1AF8  
                                               i2l2786 1AE2  
                                               i2l2874 1B32  
                                               i2l2882 1B26  
                                               i2l2890 1B14  
                                               i2l4570 12D4  
                                               i2l4562 1292  
                                               i2l4554 1262  
                                               i2l4546 122C  
                                               i2l4538 11F6  
                                               i2l4490 10B2  
                                               i2l4482 1074  
                                               i2l4474 1034  
                                               i2l2788 1AE4  
                                               i2l2892 1B16  
                                               i2l4580 1326  
                                               i2l4572 12E6  
                                               i2l4564 12A6  
                                               i2l4556 1270  
                                               i2l4548 123A  
                                               i2l4492 10B6  
                                               i2l4484 1086  
                                               i2l4476 1046  
                                               i2l2878 1B20  
                                               i2l2886 1B42  
                                               i2l2894 1B1A  
                                               i2l4590 1374  
                                               i2l4582 1334  
                                               i2l4574 12F4  
                                               i2l4566 12B4  
                                               i2l4558 127E  
                                               i2l4494 10CA  
                                               i2l4486 1094  
                                               i2l4478 1054  
                                               i2l4592 1386  
                                               i2l4584 1346  
                                               i2l4576 1306  
                                               i2l4568 12C6  
                                               i2l4496 10D8  
                                               i2l4488 10A2  
                                               i2l2898 1B64  
                                               i2l4594 1394  
                                               i2l4586 1354  
                                               i2l4578 1314  
                                               i2l4498 10E6  
                                               i2l4596 13A6  
                                               i2l4588 1366  
                                               i2l4598 13B4  
                                               _SPBRGH 000FB0  
                                               _SSPADD 000FC8  
                                               _SSPBUF 000FC9  
                                      ??_SPI_Read_Byte 0069  
                                      ??_SPI_Send_Byte 0068  
                                               clear_0 197A  
                                               isa$std 000001  
              gpio_pin_direction_intialize@_pin_config 0065  
          _I2C_Report_Receive_Overflow_InterruptHandle 002D  
                                            ?_CCP1_ISR 0064  
                                         __pdataCOMRAM 0045  
                                            ?_CCP2_ISR 0064  
                                         __mediumconst 0000  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                             __size_of_MSSP_I2C_BC_ISR 0004  
                                           __accesstop 0080  
                              __end_of__initialization 1980  
                                            ?_INT0_ISR 0064  
                                            ?_INT1_ISR 0064  
                                            ?_INT2_ISR 0064  
                                        ___rparam_used 000001  
                                    RB5_ISR@RB5_Source 0064  
                               ??_gpio_pin_write_logic 0068  
                                       __pcstackCOMRAM 0064  
                           _I2C_DefaultInterruptHandle 002F  
                                         __pidataBANK0 1B38  
                                            ?_TMR0_ISR 0064  
                                      ??_EUSART_RX_ISR 0064  
                                            ?_TMR1_ISR 0064  
                                            ?_TMR2_ISR 0064  
                                            ?_TMR3_ISR 0064  
                                      ??_EUSART_TX_ISR 0064  
                                            ?_SPI_Init 0075  
                            __size_of_InterruptManager 1414  
                                           ??_CCP1_ISR 0064  
                                           ??_CCP2_ISR 0064  
                                           __pbssBANK0 008A  
                                _INT0_InterruptHandler 002B  
                                           ??_INT0_ISR 0064  
                                           ??_INT1_ISR 0064  
                                           ??_INT2_ISR 0064  
                       __size_of_application_intialize 0006  
                        __end_of_application_intialize 1B50  
                                  SPI_Send_Byte@Config 0065  
                                           ??_TMR0_ISR 0064  
                                           ??_TMR1_ISR 0064  
                                           ??_TMR2_ISR 0064  
                                           ??_TMR3_ISR 0064  
                                    led_turn_off@F3014 003E  
  __end_of_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 19E6  
 __size_of_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 005C  
        ??_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 0070  
         ?_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 006E  
          _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 198A  
                                              _ADC_ISR 1B70  
                                           ??_SPI_Init 0077  
                                    RB7_ISR@RB7_Source 0064  
                                              _RB4_ISR 1AFA  
                                              _RB5_ISR 1AE0  
                                              _RB6_ISR 1AC6  
                                              _RB7_ISR 1AAC  
                            _RB6_InterruptHandler_HIGH 001D  
                                        ?_MSSP_I2C_ISR 0064  
                                 led_turn_toggle@F3019 003D  
                                              i2u36_40 1B0E  
                                              i2u36_41 1B0A  
                                              i2u37_40 1AF4  
                                              i2u37_41 1AF0  
                                              i2u38_40 1ADA  
                                              i2u38_41 1AD6  
                                              i2u39_40 1AC0  
                                              i2u39_41 1ABC  
                                              _SPI_SS1 0044  
                                              _SPI_Obj 0041  
                              _MSSP_SPI_Interrupt_Init 1B76  
                                           _btn_values 1001  
                                       _tris_registers 004F  
                             _RB6_InterruptHandler_LOW 001B  
                                        ?_MSSP_SPI_ISR 0064  
                                    ??_MSSP_I2C_BC_ISR 0064  
                                 _ADC_InterruptHandler 0037  
                                              __Hparam 0000  
                                              __Lparam 0000  
                                  _ecu_layer_intialize 1B74  
                                         __psmallconst 1000  
                           __end_of_gpio_pin_intialize 1926  
                                              __pcinit 1926  
 __end_of_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations 1A5E  
__size_of_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations 0032  
       ??_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations 0070  
        ?_MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations 006E  
         _MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations 1A2C  
                                              __ramtop 1000  
                                              __ptext0 17E2  
                                              __ptext1 18BA  
                                              __ptext2 16B6  
                                              __ptext3 1B4A  
                                              __ptext4 1B74  
                                              __ptext5 1A5E  
                                              __ptext6 19E6  
                                              __ptext7 141C  
                                              __ptext8 198A  
                                              __ptext9 1A2C  
                                            _T0CONbits 000FD5  
                                            _T1CONbits 000FCD  
                                       ??_MSSP_I2C_ISR 0064  
                                            _T2CONbits 000FCA  
                                            _T3CONbits 000FB1  
                                 ?_ecu_layer_intialize 0064  
                                       __pintcode_body 1016  
                                 end_of_initialization 1980  
                                              int_func 1016  
                                       ??_MSSP_SPI_ISR 0064  
                                gpio_pin_intialize@ret 0072  
                                            _RCSTAbits 000FAB  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
                                              postinc0 000FEE  
                                              postinc2 000FDE  
                                _INT1_InterruptHandler 0029  
                                            _PORTBbits 000F81  
                                       SPI_Init@Config 0075  
                                     _InterruptManager 0008  
                        gpio_pin_intialize@_pin_config 006F  
                                ??_ecu_layer_intialize 0065  
   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK 0073  
  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_CLK 0072  
                 __end_of_gpio_pin_direction_intialize 16B6  
                __size_of_gpio_pin_direction_intialize 0144  
                         _gpio_pin_direction_intialize 1572  
   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI 0072  
  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDI 0071  
   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO 0071  
  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@SPI_SDO 0070  
                            ??_MSSP_SPI_Interrupt_Init 0067  
                                            _TRISCbits 000F94  
                                    __size_of_CCP1_ISR 0004  
                                    __size_of_CCP2_ISR 0004  
                                   SPI_Read_Byte@_data 0067  
                                          _CCP1CONbits 000FBD  
                                          _CCP2CONbits 000FBA  
                                            _TXSTAbits 000FAC  
                                __end_of_SPI_Read_Byte 1A2C  
                                    __size_of_INT0_ISR 0004  
                                    __size_of_INT1_ISR 0004  
                                    __size_of_INT2_ISR 0004  
                                   relay_turn_on@F3003 003B  
                        convert_uint16_to_string@F3154 008A  
                                __end_of_SPI_Send_Byte 1A8C  
                                          _BAUDCONbits 000FB8  
                                        __pidataCOMRAM 1A8C  
                                    __size_of_TMR0_ISR 000C  
                                    __size_of_TMR1_ISR 000C  
                                    __size_of_TMR2_ISR 0008  
                                    __size_of_TMR3_ISR 000C  
                                       _timer0_preload 0013  
                                       _timer1_preload 000F  
                                       _timer2_preload 0039  
                                    __size_of_SPI_Init 0156  
                                  start_initialization 1926  
                                       _timer3_preload 0009  
    MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3050 005D  
     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3061 0059  
    MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3046 005F  
     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3055 005C  
    MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3048 005E  
     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3057 005B  
     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3059 005A  
                        ?_gpio_pin_direction_intialize 0065  
                            _EUSART_RxInterruptHandler 0005  
                                 __end_of_MSSP_I2C_ISR 1B54  
                           _EUSART_FramingErrorHandler 0003  
                        __size_of_gpio_pin_write_logic 012C  
                                          __pdataBANK0 0080  
                                             ?_ADC_ISR 0064  
                                __end_of_EUSART_RX_ISR 1B7C  
                                __end_of_EUSART_TX_ISR 1B68  
                                 __end_of_MSSP_SPI_ISR 1B7A  
                                             ?_RB4_ISR 0064  
                                             ?_RB5_ISR 0064  
                                             ?_RB6_ISR 0064  
                                             ?_RB7_ISR 0064  
                                          __pbssCOMRAM 0001  
          _I2C_Report_Write_Collision_InterruptHandler 0031  
                                      _MSSP_I2C_BC_ISR 1B54  
                                _INT2_InterruptHandler 0027  
                      gpio_pin_direction_intialize@ret 006D  
                                _TMR0_InterruptHandler 0015  
                                _application_intialize 1B4A  
                                   SPI_Send_Byte@_data 0067  
                                            __pintcode 0008  
                      gpio_pin_write_logic@_pin_config 0065  
                            gpio_pin_write_logic@logic 0067  
                                          __smallconst 1000  
                            _RB4_InterruptHandler_HIGH 0025  
                                             _CCP1_ISR 1B6C  
                                             _CCP2_ISR 1B68  
                            _RB7_InterruptHandler_HIGH 0019  
                                   _gpio_pin_intialize 18BA  
                       ??_gpio_pin_direction_intialize 0067  
                             _RB5_InterruptHandler_LOW 001F  
                                             _INT0_ISR 1B60  
                                             _INT1_ISR 1B5C  
                                             _INT2_ISR 1B58  
                                             _RB4_Flag 0063  
                                             _RB5_Flag 0062  
                                             _RB6_Flag 0061  
                                             _RB7_Flag 0060  
                                    RB4_ISR@RB4_Source 0064  
                                  ?_gpio_pin_intialize 006F  
                             __end_of_InterruptManager 141C  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                                             i2u230_40 10A2  
                                             i2u222_40 1026  
                                             i2u230_41 109E  
                                             i2u222_41 1022  
                                             i2u231_40 10B2  
                                             i2u223_40 1034  
                                             i2u231_41 10AE  
                                             i2u223_41 1030  
                                             i2u240_40 1152  
                                             i2u232_40 10CA  
                                             i2u224_40 1046  
                                             i2u240_41 114E  
                                             i2u232_41 10C6  
                                             i2u224_41 1042  
                                             i2u241_40 1160  
                                             i2u233_40 10D8  
                                             i2u225_40 1054  
                                             i2u241_41 115C  
                                             i2u233_41 10D4  
                                             i2u225_41 1050  
                                             i2u250_40 11F6  
                                             i2u242_40 116E  
                                             i2u234_40 10E6  
                                             i2u226_40 1066  
                                             i2u250_41 11F2  
                                             i2u242_41 116A  
                                             i2u234_41 10E2  
                                             i2u226_41 1062  
                                             i2u251_40 1206  
                                             i2u243_40 117E  
                                             i2u235_40 10F6  
                                             i2u227_40 1074  
                                             i2u251_41 1202  
                                             i2u243_41 117A  
                                             i2u235_41 10F2  
                                             i2u227_41 1070  
                                             i2u260_40 12A6  
                                             i2u252_40 121E  
                                             i2u244_40 1196  
                                             i2u236_40 110E  
                                             i2u228_40 1086  
                                             i2u260_41 12A2  
                                             i2u252_41 121A  
                                             i2u244_41 1192  
                                             i2u236_41 110A  
                                             i2u228_41 1082  
                                             i2u261_40 12B4  
                                             i2u253_40 122C  
                                             i2u245_40 11A4  
                                             i2u237_40 111C  
                                             i2u229_40 1094  
                                             i2u261_41 12B0  
                                             i2u253_41 1228  
                                             i2u245_41 11A0  
                                             i2u237_41 1118  
                                             i2u229_41 1090  
                                             i2u270_40 1346  
                                             i2u262_40 12C6  
                                             i2u254_40 123A  
                                             i2u246_40 11B2  
                                             i2u238_40 112A  
                                             i2u270_41 1342  
                                             i2u262_41 12C2  
                                             i2u254_41 1236  
                                             i2u246_41 11AE  
                                             i2u238_41 1126  
                                             i2u271_40 1354  
                                             i2u263_40 12D4  
                                             i2u255_40 124A  
                                             i2u247_40 11C2  
                                             i2u239_40 113A  
                                             i2u271_41 1350  
                                             i2u263_41 12D0  
                                             i2u255_41 1246  
                                             i2u247_41 11BE  
                                             i2u239_41 1136  
                                             i2u280_40 13E6  
                                             i2u272_40 1366  
                                             i2u264_40 12E6  
                                             i2u256_40 1262  
                                             i2u248_40 11DA  
                                             i2u280_41 13E2  
                                             i2u272_41 1362  
                                             i2u264_41 12E2  
                                             i2u256_41 125E  
                                             i2u248_41 11D6  
                                             i2u281_40 13F4  
                                             i2u273_40 1374  
                                             i2u265_40 12F4  
                                             i2u257_40 1270  
                                             i2u249_40 11E8  
                                             i2u281_41 13F0  
                                             i2u273_41 1370  
                                             i2u265_41 12F0  
                                             i2u257_41 126C  
                                             i2u249_41 11E4  
                                             _PIR1bits 000F9E  
                                             i2u282_40 1406  
                                             i2u274_40 1386  
                                             i2u266_40 1306  
                                             i2u258_40 127E  
                                             i2u282_41 1402  
                                             i2u274_41 1382  
                                             i2u266_41 1302  
                                             i2u258_41 127A  
                                             i2u283_40 1414  
                                             i2u275_40 1394  
                                             i2u267_40 1314  
                                             i2u259_40 128E  
                                             i2u283_41 1410  
                                             i2u275_41 1390  
                                             i2u267_41 1310  
                                             i2u259_41 128A  
                                             _PIR2bits 000FA1  
                                             i2u276_40 13A6  
                                             i2u268_40 1326  
                                             i2u276_41 13A2  
                                             i2u268_41 1322  
                                             i2u277_40 13B4  
                                             i2u269_40 1334  
                                             i2u277_41 13B0  
                                             i2u269_41 1330  
                                             i2u278_40 13C6  
                                             i2u278_41 13C2  
                                             i2u279_40 13D4  
                                             i2u279_41 13D0  
                                             _TMR0_ISR 1B2C  
                                             _TMR1_ISR 1B20  
                                             _TMR2_ISR 1B42  
                                             _TMR3_ISR 1B14  
    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS 0074  
                                             _SPI_Init 141C  
                                     __size_of_ADC_ISR 0004  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                           _ADCON2bits 000FC0  
    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config 006E  
   MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@Config 006E  
                              __end_of_MSSP_I2C_BC_ISR 1B58  
                                 ??_gpio_pin_intialize 0071  
                                     __size_of_RB4_ISR 001A  
                                     __size_of_RB5_ISR 001A  
                                     __size_of_RB6_ISR 001A  
                                     __size_of_RB7_ISR 001A  
                              gpio_pin_write_logic@ret 006E  
                                          _INTCON2bits 000FF1  
                                          _INTCON3bits 000FF0  
                                            copy_data0 193A  
                                            copy_data1 195A  
                        MSSP_SPI_Interrupt_Init@Config 0065  
                                __size_of_MSSP_I2C_ISR 0004  
                                           _EECON1bits 000FA6  
                               ?_application_intialize 0064  
                                             __Hrparam 0000  
                                             __Lrparam 0000  
                                __size_of_MSSP_SPI_ISR 0002  
                                    RB6_ISR@RB6_Source 0064  
                                _CCP1_InterruptHandler 0035  
                          __end_of_ecu_layer_intialize 1B76  
                                   __end_of_btn_values 1011  
                                _TMR1_InterruptHandler 0011  
                                         _MSSP_I2C_ISR 1B50  
                                             __ptext10 1572  
                                             __ptext11 1B76  
                                             __ptext20 1AFA  
                                             __ptext21 1B78  
                                             __ptext13 1B14  
                                             __ptext30 1B6C  
                                             __ptext22 1B50  
                                             __ptext14 1B42  
                                             __ptext31 1B70  
                                             __ptext23 1B54  
                                             __ptext15 1B20  
                                             __ptext24 1B58  
                                             __ptext16 1B2C  
                                             __ptext25 1B5C  
                                             __ptext17 1AAC  
                                             __ptext26 1B60  
                                             __ptext18 1AC6  
                                             __ptext27 1B64  
                                             __ptext19 1AE0  
                                             __ptext28 1B7A  
                                             __ptext29 1B68  
                                        __size_of_main 00D8  
                                         _MSSP_SPI_ISR 1B78  
                                             isa$xinst 000000  
                                             int$flags 007A  
                             ?_MSSP_SPI_Interrupt_Init 0065  
                                     ?_MSSP_I2C_BC_ISR 0064  
                                           _INTCONbits 000FF2  
                               __size_of_SPI_Read_Byte 0046  
                         __end_of_gpio_pin_write_logic 17E2  
                                             intlevel2 0000  
                               __size_of_SPI_Send_Byte 002E  
                            _EUSART_TxInterruptHandler 0007  
                                       _port_registers 0080  
                                          _SSPCON1bits 000FC6  
                                          _SSPCON2bits 000FC5  
                        _SPI_Msater_Side_Slave1_RetVal 0043  
                                _CCP2_InterruptHandler 0033  
                               __size_of_EUSART_RX_ISR 0002  
                               __size_of_EUSART_TX_ISR 0004  
                                _TMR2_InterruptHandler 000D  
                                    ?_InterruptManager 0064  
                                        _SPI_Read_Byte 19E6  
